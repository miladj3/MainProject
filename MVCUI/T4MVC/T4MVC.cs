// <auto-generated />
// This file was generated by a T4 template.
// Don't change it directly as your change would get overwritten.  Instead, make changes
// to the .tt file (i.e. the T4 template) and save it to regenerate this file.

// Make sure the compiler doesn't complain about missing Xml comments and CLS compliance
// 0108: suppress "Foo hides inherited member Foo. Use the new keyword if hiding was intended." when a controller and its abstract parent are both processed
// 0114: suppress "Foo.BarController.Baz()' hides inherited member 'Qux.BarController.Baz()'. To make the current member override that implementation, add the override keyword. Otherwise add the new keyword." when an action (with an argument) overrides an action in a parent controller
#pragma warning disable 1591, 3008, 3009, 0108, 0114
#region T4MVC

using System;
using System.Diagnostics;
using System.CodeDom.Compiler;
using System.Collections.Generic;
using System.Linq;
using System.Runtime.CompilerServices;
using System.Threading.Tasks;
using System.Web;
using System.Web.Hosting;
using System.Web.Mvc;
using System.Web.Mvc.Ajax;
using System.Web.Mvc.Html;
using System.Web.Routing;
using T4MVC;

[GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
public static partial class MVC
{
    public static MVCUI.Controllers.HomeController Home = new MVCUI.Controllers.T4MVC_HomeController();
    public static T4MVC.SharedController Shared = new T4MVC.SharedController();
}

namespace T4MVC
{
}

namespace T4MVC
{
    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
    public class Dummy
    {
        private Dummy() { }
        public static Dummy Instance = new Dummy();
    }
}

[GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
internal partial class T4MVC_System_Web_Mvc_ActionResult : System.Web.Mvc.ActionResult, IT4MVCActionResult
{
    public T4MVC_System_Web_Mvc_ActionResult(string area, string controller, string action, string protocol = null): base()
    {
        this.InitMVCT4Result(area, controller, action, protocol);
    }
     
    public override void ExecuteResult(System.Web.Mvc.ControllerContext context) { }
    
    public string Controller { get; set; }
    public string Action { get; set; }
    public string Protocol { get; set; }
    public RouteValueDictionary RouteValueDictionary { get; set; }
}



namespace Links
{
    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
    public static class Scripts {
        private const string URLPATH = "~/Scripts";
        public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
        public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
        public static readonly string _references_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/_references.min.js") ? Url("_references.min.js") : Url("_references.js");
        public static readonly string bootbox_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/bootbox.min.js") ? Url("bootbox.min.js") : Url("bootbox.js");
        public static readonly string bootbox_min_js = Url("bootbox.min.js");
        public static readonly string bootstrap_select_min_js = Url("bootstrap-select.min.js");
        public static readonly string bootstrap_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/bootstrap.min.js") ? Url("bootstrap.min.js") : Url("bootstrap.js");
        public static readonly string bootstrap_min_js = Url("bootstrap.min.js");
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public static class ckeditor {
            private const string URLPATH = "~/Scripts/ckeditor";
            public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
            public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
            [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
            public static class adapters {
                private const string URLPATH = "~/Scripts/ckeditor/adapters";
                public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                public static readonly string jquery_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/jquery.min.js") ? Url("jquery.min.js") : Url("jquery.js");
            }
        
            public static readonly string ckeditor_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/ckeditor.min.js") ? Url("ckeditor.min.js") : Url("ckeditor.js");
            public static readonly string config_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/config.min.js") ? Url("config.min.js") : Url("config.js");
            public static readonly string contents_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/contents.min.css") ? Url("contents.min.css") : Url("contents.css");
            [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
            public static class images {
                private const string URLPATH = "~/Scripts/ckeditor/images";
                public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                public static readonly string spacer_gif = Url("spacer.gif");
            }
        
            [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
            public static class lang {
                private const string URLPATH = "~/Scripts/ckeditor/lang";
                public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                public static readonly string _languages_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/_languages.min.js") ? Url("_languages.min.js") : Url("_languages.js");
                public static readonly string _translationstatus_txt = Url("_translationstatus.txt");
                public static readonly string af_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/af.min.js") ? Url("af.min.js") : Url("af.js");
                public static readonly string ar_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/ar.min.js") ? Url("ar.min.js") : Url("ar.js");
                public static readonly string bg_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/bg.min.js") ? Url("bg.min.js") : Url("bg.js");
                public static readonly string bn_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/bn.min.js") ? Url("bn.min.js") : Url("bn.js");
                public static readonly string bs_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/bs.min.js") ? Url("bs.min.js") : Url("bs.js");
                public static readonly string ca_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/ca.min.js") ? Url("ca.min.js") : Url("ca.js");
                public static readonly string cs_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/cs.min.js") ? Url("cs.min.js") : Url("cs.js");
                public static readonly string cy_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/cy.min.js") ? Url("cy.min.js") : Url("cy.js");
                public static readonly string da_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/da.min.js") ? Url("da.min.js") : Url("da.js");
                public static readonly string de_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/de.min.js") ? Url("de.min.js") : Url("de.js");
                public static readonly string el_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/el.min.js") ? Url("el.min.js") : Url("el.js");
                public static readonly string en_au_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/en-au.min.js") ? Url("en-au.min.js") : Url("en-au.js");
                public static readonly string en_ca_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/en-ca.min.js") ? Url("en-ca.min.js") : Url("en-ca.js");
                public static readonly string en_gb_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/en-gb.min.js") ? Url("en-gb.min.js") : Url("en-gb.js");
                public static readonly string en_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/en.min.js") ? Url("en.min.js") : Url("en.js");
                public static readonly string eo_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/eo.min.js") ? Url("eo.min.js") : Url("eo.js");
                public static readonly string es_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/es.min.js") ? Url("es.min.js") : Url("es.js");
                public static readonly string et_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/et.min.js") ? Url("et.min.js") : Url("et.js");
                public static readonly string eu_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/eu.min.js") ? Url("eu.min.js") : Url("eu.js");
                public static readonly string fa_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/fa.min.js") ? Url("fa.min.js") : Url("fa.js");
                public static readonly string fi_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/fi.min.js") ? Url("fi.min.js") : Url("fi.js");
                public static readonly string fo_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/fo.min.js") ? Url("fo.min.js") : Url("fo.js");
                public static readonly string fr_ca_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/fr-ca.min.js") ? Url("fr-ca.min.js") : Url("fr-ca.js");
                public static readonly string fr_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/fr.min.js") ? Url("fr.min.js") : Url("fr.js");
                public static readonly string gl_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/gl.min.js") ? Url("gl.min.js") : Url("gl.js");
                public static readonly string gu_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/gu.min.js") ? Url("gu.min.js") : Url("gu.js");
                public static readonly string he_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/he.min.js") ? Url("he.min.js") : Url("he.js");
                public static readonly string hi_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/hi.min.js") ? Url("hi.min.js") : Url("hi.js");
                public static readonly string hr_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/hr.min.js") ? Url("hr.min.js") : Url("hr.js");
                public static readonly string hu_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/hu.min.js") ? Url("hu.min.js") : Url("hu.js");
                public static readonly string id_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/id.min.js") ? Url("id.min.js") : Url("id.js");
                public static readonly string is_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/is.min.js") ? Url("is.min.js") : Url("is.js");
                public static readonly string it_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/it.min.js") ? Url("it.min.js") : Url("it.js");
                public static readonly string ja_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/ja.min.js") ? Url("ja.min.js") : Url("ja.js");
                public static readonly string ka_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/ka.min.js") ? Url("ka.min.js") : Url("ka.js");
                public static readonly string km_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/km.min.js") ? Url("km.min.js") : Url("km.js");
                public static readonly string ko_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/ko.min.js") ? Url("ko.min.js") : Url("ko.js");
                public static readonly string ku_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/ku.min.js") ? Url("ku.min.js") : Url("ku.js");
                public static readonly string lt_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/lt.min.js") ? Url("lt.min.js") : Url("lt.js");
                public static readonly string lv_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/lv.min.js") ? Url("lv.min.js") : Url("lv.js");
                public static readonly string mk_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/mk.min.js") ? Url("mk.min.js") : Url("mk.js");
                public static readonly string mn_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/mn.min.js") ? Url("mn.min.js") : Url("mn.js");
                public static readonly string ms_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/ms.min.js") ? Url("ms.min.js") : Url("ms.js");
                public static readonly string nb_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/nb.min.js") ? Url("nb.min.js") : Url("nb.js");
                public static readonly string nl_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/nl.min.js") ? Url("nl.min.js") : Url("nl.js");
                public static readonly string no_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/no.min.js") ? Url("no.min.js") : Url("no.js");
                public static readonly string pl_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/pl.min.js") ? Url("pl.min.js") : Url("pl.js");
                public static readonly string pt_br_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/pt-br.min.js") ? Url("pt-br.min.js") : Url("pt-br.js");
                public static readonly string pt_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/pt.min.js") ? Url("pt.min.js") : Url("pt.js");
                public static readonly string ro_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/ro.min.js") ? Url("ro.min.js") : Url("ro.js");
                public static readonly string ru_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/ru.min.js") ? Url("ru.min.js") : Url("ru.js");
                public static readonly string sk_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/sk.min.js") ? Url("sk.min.js") : Url("sk.js");
                public static readonly string sl_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/sl.min.js") ? Url("sl.min.js") : Url("sl.js");
                public static readonly string sr_latn_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/sr-latn.min.js") ? Url("sr-latn.min.js") : Url("sr-latn.js");
                public static readonly string sr_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/sr.min.js") ? Url("sr.min.js") : Url("sr.js");
                public static readonly string sv_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/sv.min.js") ? Url("sv.min.js") : Url("sv.js");
                public static readonly string th_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/th.min.js") ? Url("th.min.js") : Url("th.js");
                public static readonly string tr_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/tr.min.js") ? Url("tr.min.js") : Url("tr.js");
                public static readonly string ug_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/ug.min.js") ? Url("ug.min.js") : Url("ug.js");
                public static readonly string uk_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/uk.min.js") ? Url("uk.min.js") : Url("uk.js");
                public static readonly string vi_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/vi.min.js") ? Url("vi.min.js") : Url("vi.js");
                public static readonly string zh_cn_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/zh-cn.min.js") ? Url("zh-cn.min.js") : Url("zh-cn.js");
                public static readonly string zh_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/zh.min.js") ? Url("zh.min.js") : Url("zh.js");
            }
        
            [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
            public static class plugins {
                private const string URLPATH = "~/Scripts/ckeditor/plugins";
                public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                public static class a11yhelp {
                    private const string URLPATH = "~/Scripts/ckeditor/plugins/a11yhelp";
                    public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                    public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                    public static class dialogs {
                        private const string URLPATH = "~/Scripts/ckeditor/plugins/a11yhelp/dialogs";
                        public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                        public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                        public static readonly string a11yhelp_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/a11yhelp.min.js") ? Url("a11yhelp.min.js") : Url("a11yhelp.js");
                    }
                
                    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                    public static class lang {
                        private const string URLPATH = "~/Scripts/ckeditor/plugins/a11yhelp/lang";
                        public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                        public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                        public static readonly string _translationstatus_txt = Url("_translationstatus.txt");
                        public static readonly string cs_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/cs.min.js") ? Url("cs.min.js") : Url("cs.js");
                        public static readonly string cy_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/cy.min.js") ? Url("cy.min.js") : Url("cy.js");
                        public static readonly string da_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/da.min.js") ? Url("da.min.js") : Url("da.js");
                        public static readonly string de_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/de.min.js") ? Url("de.min.js") : Url("de.js");
                        public static readonly string el_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/el.min.js") ? Url("el.min.js") : Url("el.js");
                        public static readonly string en_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/en.min.js") ? Url("en.min.js") : Url("en.js");
                        public static readonly string eo_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/eo.min.js") ? Url("eo.min.js") : Url("eo.js");
                        public static readonly string fa_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/fa.min.js") ? Url("fa.min.js") : Url("fa.js");
                        public static readonly string fi_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/fi.min.js") ? Url("fi.min.js") : Url("fi.js");
                        public static readonly string fr_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/fr.min.js") ? Url("fr.min.js") : Url("fr.js");
                        public static readonly string gu_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/gu.min.js") ? Url("gu.min.js") : Url("gu.js");
                        public static readonly string he_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/he.min.js") ? Url("he.min.js") : Url("he.js");
                        public static readonly string it_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/it.min.js") ? Url("it.min.js") : Url("it.js");
                        public static readonly string ku_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/ku.min.js") ? Url("ku.min.js") : Url("ku.js");
                        public static readonly string mk_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/mk.min.js") ? Url("mk.min.js") : Url("mk.js");
                        public static readonly string nb_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/nb.min.js") ? Url("nb.min.js") : Url("nb.js");
                        public static readonly string nl_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/nl.min.js") ? Url("nl.min.js") : Url("nl.js");
                        public static readonly string no_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/no.min.js") ? Url("no.min.js") : Url("no.js");
                        public static readonly string pt_br_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/pt-br.min.js") ? Url("pt-br.min.js") : Url("pt-br.js");
                        public static readonly string ro_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/ro.min.js") ? Url("ro.min.js") : Url("ro.js");
                        public static readonly string sk_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/sk.min.js") ? Url("sk.min.js") : Url("sk.js");
                        public static readonly string tr_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/tr.min.js") ? Url("tr.min.js") : Url("tr.js");
                        public static readonly string ug_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/ug.min.js") ? Url("ug.min.js") : Url("ug.js");
                        public static readonly string vi_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/vi.min.js") ? Url("vi.min.js") : Url("vi.js");
                        public static readonly string zh_cn_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/zh-cn.min.js") ? Url("zh-cn.min.js") : Url("zh-cn.js");
                    }
                
                }
            
                [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                public static class about {
                    private const string URLPATH = "~/Scripts/ckeditor/plugins/about";
                    public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                    public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                    public static class dialogs {
                        private const string URLPATH = "~/Scripts/ckeditor/plugins/about/dialogs";
                        public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                        public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                        public static readonly string about_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/about.min.js") ? Url("about.min.js") : Url("about.js");
                        public static readonly string logo_ckeditor_png = Url("logo_ckeditor.png");
                    }
                
                }
            
                [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                public static class adobeair {
                    private const string URLPATH = "~/Scripts/ckeditor/plugins/adobeair";
                    public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                    public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                    public static readonly string plugin_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/plugin.min.js") ? Url("plugin.min.js") : Url("plugin.js");
                }
            
                [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                public static class ajax {
                    private const string URLPATH = "~/Scripts/ckeditor/plugins/ajax";
                    public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                    public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                    public static readonly string plugin_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/plugin.min.js") ? Url("plugin.min.js") : Url("plugin.js");
                }
            
                [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                public static class autogrow {
                    private const string URLPATH = "~/Scripts/ckeditor/plugins/autogrow";
                    public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                    public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                    public static readonly string plugin_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/plugin.min.js") ? Url("plugin.min.js") : Url("plugin.js");
                }
            
                [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                public static class bbcode {
                    private const string URLPATH = "~/Scripts/ckeditor/plugins/bbcode";
                    public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                    public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                    public static readonly string plugin_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/plugin.min.js") ? Url("plugin.min.js") : Url("plugin.js");
                }
            
                [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                public static class clipboard {
                    private const string URLPATH = "~/Scripts/ckeditor/plugins/clipboard";
                    public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                    public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                    public static class dialogs {
                        private const string URLPATH = "~/Scripts/ckeditor/plugins/clipboard/dialogs";
                        public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                        public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                        public static readonly string paste_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/paste.min.js") ? Url("paste.min.js") : Url("paste.js");
                    }
                
                }
            
                [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                public static class colordialog {
                    private const string URLPATH = "~/Scripts/ckeditor/plugins/colordialog";
                    public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                    public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                    public static class dialogs {
                        private const string URLPATH = "~/Scripts/ckeditor/plugins/colordialog/dialogs";
                        public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                        public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                        public static readonly string colordialog_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/colordialog.min.js") ? Url("colordialog.min.js") : Url("colordialog.js");
                    }
                
                }
            
                [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                public static class devtools {
                    private const string URLPATH = "~/Scripts/ckeditor/plugins/devtools";
                    public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                    public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                    public static class lang {
                        private const string URLPATH = "~/Scripts/ckeditor/plugins/devtools/lang";
                        public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                        public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                        public static readonly string _translationstatus_txt = Url("_translationstatus.txt");
                        public static readonly string bg_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/bg.min.js") ? Url("bg.min.js") : Url("bg.js");
                        public static readonly string cs_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/cs.min.js") ? Url("cs.min.js") : Url("cs.js");
                        public static readonly string cy_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/cy.min.js") ? Url("cy.min.js") : Url("cy.js");
                        public static readonly string da_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/da.min.js") ? Url("da.min.js") : Url("da.js");
                        public static readonly string de_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/de.min.js") ? Url("de.min.js") : Url("de.js");
                        public static readonly string el_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/el.min.js") ? Url("el.min.js") : Url("el.js");
                        public static readonly string en_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/en.min.js") ? Url("en.min.js") : Url("en.js");
                        public static readonly string eo_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/eo.min.js") ? Url("eo.min.js") : Url("eo.js");
                        public static readonly string et_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/et.min.js") ? Url("et.min.js") : Url("et.js");
                        public static readonly string fa_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/fa.min.js") ? Url("fa.min.js") : Url("fa.js");
                        public static readonly string fi_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/fi.min.js") ? Url("fi.min.js") : Url("fi.js");
                        public static readonly string fr_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/fr.min.js") ? Url("fr.min.js") : Url("fr.js");
                        public static readonly string gu_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/gu.min.js") ? Url("gu.min.js") : Url("gu.js");
                        public static readonly string he_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/he.min.js") ? Url("he.min.js") : Url("he.js");
                        public static readonly string hr_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/hr.min.js") ? Url("hr.min.js") : Url("hr.js");
                        public static readonly string it_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/it.min.js") ? Url("it.min.js") : Url("it.js");
                        public static readonly string ku_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/ku.min.js") ? Url("ku.min.js") : Url("ku.js");
                        public static readonly string nb_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/nb.min.js") ? Url("nb.min.js") : Url("nb.js");
                        public static readonly string nl_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/nl.min.js") ? Url("nl.min.js") : Url("nl.js");
                        public static readonly string no_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/no.min.js") ? Url("no.min.js") : Url("no.js");
                        public static readonly string pl_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/pl.min.js") ? Url("pl.min.js") : Url("pl.js");
                        public static readonly string pt_br_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/pt-br.min.js") ? Url("pt-br.min.js") : Url("pt-br.js");
                        public static readonly string sk_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/sk.min.js") ? Url("sk.min.js") : Url("sk.js");
                        public static readonly string tr_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/tr.min.js") ? Url("tr.min.js") : Url("tr.js");
                        public static readonly string ug_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/ug.min.js") ? Url("ug.min.js") : Url("ug.js");
                        public static readonly string uk_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/uk.min.js") ? Url("uk.min.js") : Url("uk.js");
                        public static readonly string vi_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/vi.min.js") ? Url("vi.min.js") : Url("vi.js");
                        public static readonly string zh_cn_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/zh-cn.min.js") ? Url("zh-cn.min.js") : Url("zh-cn.js");
                    }
                
                    public static readonly string plugin_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/plugin.min.js") ? Url("plugin.min.js") : Url("plugin.js");
                }
            
                [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                public static class dialog {
                    private const string URLPATH = "~/Scripts/ckeditor/plugins/dialog";
                    public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                    public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                    public static readonly string dialogDefinition_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/dialogDefinition.min.js") ? Url("dialogDefinition.min.js") : Url("dialogDefinition.js");
                }
            
                [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                public static class div {
                    private const string URLPATH = "~/Scripts/ckeditor/plugins/div";
                    public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                    public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                    public static class dialogs {
                        private const string URLPATH = "~/Scripts/ckeditor/plugins/div/dialogs";
                        public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                        public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                        public static readonly string div_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/div.min.js") ? Url("div.min.js") : Url("div.js");
                    }
                
                }
            
                [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                public static class docprops {
                    private const string URLPATH = "~/Scripts/ckeditor/plugins/docprops";
                    public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                    public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                    public static class dialogs {
                        private const string URLPATH = "~/Scripts/ckeditor/plugins/docprops/dialogs";
                        public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                        public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                        public static readonly string docprops_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/docprops.min.js") ? Url("docprops.min.js") : Url("docprops.js");
                    }
                
                    public static readonly string plugin_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/plugin.min.js") ? Url("plugin.min.js") : Url("plugin.js");
                }
            
                [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                public static class find {
                    private const string URLPATH = "~/Scripts/ckeditor/plugins/find";
                    public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                    public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                    public static class dialogs {
                        private const string URLPATH = "~/Scripts/ckeditor/plugins/find/dialogs";
                        public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                        public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                        public static readonly string find_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/find.min.js") ? Url("find.min.js") : Url("find.js");
                    }
                
                }
            
                [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                public static class flash {
                    private const string URLPATH = "~/Scripts/ckeditor/plugins/flash";
                    public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                    public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                    public static class dialogs {
                        private const string URLPATH = "~/Scripts/ckeditor/plugins/flash/dialogs";
                        public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                        public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                        public static readonly string flash_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/flash.min.js") ? Url("flash.min.js") : Url("flash.js");
                    }
                
                    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                    public static class images {
                        private const string URLPATH = "~/Scripts/ckeditor/plugins/flash/images";
                        public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                        public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                        public static readonly string placeholder_png = Url("placeholder.png");
                    }
                
                }
            
                [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                public static class forms {
                    private const string URLPATH = "~/Scripts/ckeditor/plugins/forms";
                    public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                    public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                    public static class dialogs {
                        private const string URLPATH = "~/Scripts/ckeditor/plugins/forms/dialogs";
                        public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                        public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                        public static readonly string button_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/button.min.js") ? Url("button.min.js") : Url("button.js");
                        public static readonly string checkbox_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/checkbox.min.js") ? Url("checkbox.min.js") : Url("checkbox.js");
                        public static readonly string form_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/form.min.js") ? Url("form.min.js") : Url("form.js");
                        public static readonly string hiddenfield_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/hiddenfield.min.js") ? Url("hiddenfield.min.js") : Url("hiddenfield.js");
                        public static readonly string radio_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/radio.min.js") ? Url("radio.min.js") : Url("radio.js");
                        public static readonly string select_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/select.min.js") ? Url("select.min.js") : Url("select.js");
                        public static readonly string textarea_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/textarea.min.js") ? Url("textarea.min.js") : Url("textarea.js");
                        public static readonly string textfield_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/textfield.min.js") ? Url("textfield.min.js") : Url("textfield.js");
                    }
                
                    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                    public static class images {
                        private const string URLPATH = "~/Scripts/ckeditor/plugins/forms/images";
                        public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                        public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                        public static readonly string hiddenfield_gif = Url("hiddenfield.gif");
                    }
                
                }
            
                [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                public static class iframe {
                    private const string URLPATH = "~/Scripts/ckeditor/plugins/iframe";
                    public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                    public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                    public static class dialogs {
                        private const string URLPATH = "~/Scripts/ckeditor/plugins/iframe/dialogs";
                        public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                        public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                        public static readonly string iframe_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/iframe.min.js") ? Url("iframe.min.js") : Url("iframe.js");
                    }
                
                    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                    public static class images {
                        private const string URLPATH = "~/Scripts/ckeditor/plugins/iframe/images";
                        public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                        public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                        public static readonly string placeholder_png = Url("placeholder.png");
                    }
                
                }
            
                [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                public static class iframedialog {
                    private const string URLPATH = "~/Scripts/ckeditor/plugins/iframedialog";
                    public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                    public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                    public static readonly string plugin_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/plugin.min.js") ? Url("plugin.min.js") : Url("plugin.js");
                }
            
                [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                public static class image {
                    private const string URLPATH = "~/Scripts/ckeditor/plugins/image";
                    public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                    public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                    public static class dialogs {
                        private const string URLPATH = "~/Scripts/ckeditor/plugins/image/dialogs";
                        public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                        public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                        public static readonly string image_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/image.min.js") ? Url("image.min.js") : Url("image.js");
                    }
                
                }
            
                [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                public static class link {
                    private const string URLPATH = "~/Scripts/ckeditor/plugins/link";
                    public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                    public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                    public static class dialogs {
                        private const string URLPATH = "~/Scripts/ckeditor/plugins/link/dialogs";
                        public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                        public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                        public static readonly string anchor_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/anchor.min.js") ? Url("anchor.min.js") : Url("anchor.js");
                        public static readonly string link_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/link.min.js") ? Url("link.min.js") : Url("link.js");
                    }
                
                    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                    public static class images {
                        private const string URLPATH = "~/Scripts/ckeditor/plugins/link/images";
                        public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                        public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                        public static readonly string anchor_gif = Url("anchor.gif");
                    }
                
                }
            
                [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                public static class liststyle {
                    private const string URLPATH = "~/Scripts/ckeditor/plugins/liststyle";
                    public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                    public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                    public static class dialogs {
                        private const string URLPATH = "~/Scripts/ckeditor/plugins/liststyle/dialogs";
                        public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                        public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                        public static readonly string liststyle_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/liststyle.min.js") ? Url("liststyle.min.js") : Url("liststyle.js");
                    }
                
                }
            
                [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                public static class pagebreak {
                    private const string URLPATH = "~/Scripts/ckeditor/plugins/pagebreak";
                    public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                    public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                    public static class images {
                        private const string URLPATH = "~/Scripts/ckeditor/plugins/pagebreak/images";
                        public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                        public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                        public static readonly string pagebreak_gif = Url("pagebreak.gif");
                    }
                
                }
            
                [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                public static class pastefromword {
                    private const string URLPATH = "~/Scripts/ckeditor/plugins/pastefromword";
                    public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                    public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                    public static class filter {
                        private const string URLPATH = "~/Scripts/ckeditor/plugins/pastefromword/filter";
                        public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                        public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                        public static readonly string default_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/default.min.js") ? Url("default.min.js") : Url("default.js");
                    }
                
                }
            
                [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                public static class pastetext {
                    private const string URLPATH = "~/Scripts/ckeditor/plugins/pastetext";
                    public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                    public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                    public static class dialogs {
                        private const string URLPATH = "~/Scripts/ckeditor/plugins/pastetext/dialogs";
                        public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                        public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                        public static readonly string pastetext_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/pastetext.min.js") ? Url("pastetext.min.js") : Url("pastetext.js");
                    }
                
                }
            
                [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                public static class placeholder {
                    private const string URLPATH = "~/Scripts/ckeditor/plugins/placeholder";
                    public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                    public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                    public static class dialogs {
                        private const string URLPATH = "~/Scripts/ckeditor/plugins/placeholder/dialogs";
                        public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                        public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                        public static readonly string placeholder_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/placeholder.min.js") ? Url("placeholder.min.js") : Url("placeholder.js");
                    }
                
                    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                    public static class lang {
                        private const string URLPATH = "~/Scripts/ckeditor/plugins/placeholder/lang";
                        public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                        public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                        public static readonly string _translationstatus_txt = Url("_translationstatus.txt");
                        public static readonly string bg_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/bg.min.js") ? Url("bg.min.js") : Url("bg.js");
                        public static readonly string cs_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/cs.min.js") ? Url("cs.min.js") : Url("cs.js");
                        public static readonly string cy_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/cy.min.js") ? Url("cy.min.js") : Url("cy.js");
                        public static readonly string da_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/da.min.js") ? Url("da.min.js") : Url("da.js");
                        public static readonly string de_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/de.min.js") ? Url("de.min.js") : Url("de.js");
                        public static readonly string el_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/el.min.js") ? Url("el.min.js") : Url("el.js");
                        public static readonly string en_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/en.min.js") ? Url("en.min.js") : Url("en.js");
                        public static readonly string eo_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/eo.min.js") ? Url("eo.min.js") : Url("eo.js");
                        public static readonly string et_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/et.min.js") ? Url("et.min.js") : Url("et.js");
                        public static readonly string fa_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/fa.min.js") ? Url("fa.min.js") : Url("fa.js");
                        public static readonly string fi_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/fi.min.js") ? Url("fi.min.js") : Url("fi.js");
                        public static readonly string fr_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/fr.min.js") ? Url("fr.min.js") : Url("fr.js");
                        public static readonly string he_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/he.min.js") ? Url("he.min.js") : Url("he.js");
                        public static readonly string hr_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/hr.min.js") ? Url("hr.min.js") : Url("hr.js");
                        public static readonly string it_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/it.min.js") ? Url("it.min.js") : Url("it.js");
                        public static readonly string ku_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/ku.min.js") ? Url("ku.min.js") : Url("ku.js");
                        public static readonly string nb_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/nb.min.js") ? Url("nb.min.js") : Url("nb.js");
                        public static readonly string nl_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/nl.min.js") ? Url("nl.min.js") : Url("nl.js");
                        public static readonly string no_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/no.min.js") ? Url("no.min.js") : Url("no.js");
                        public static readonly string pl_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/pl.min.js") ? Url("pl.min.js") : Url("pl.js");
                        public static readonly string pt_br_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/pt-br.min.js") ? Url("pt-br.min.js") : Url("pt-br.js");
                        public static readonly string sk_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/sk.min.js") ? Url("sk.min.js") : Url("sk.js");
                        public static readonly string tr_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/tr.min.js") ? Url("tr.min.js") : Url("tr.js");
                        public static readonly string ug_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/ug.min.js") ? Url("ug.min.js") : Url("ug.js");
                        public static readonly string uk_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/uk.min.js") ? Url("uk.min.js") : Url("uk.js");
                        public static readonly string vi_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/vi.min.js") ? Url("vi.min.js") : Url("vi.js");
                        public static readonly string zh_cn_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/zh-cn.min.js") ? Url("zh-cn.min.js") : Url("zh-cn.js");
                    }
                
                    public static readonly string placeholder_gif = Url("placeholder.gif");
                    public static readonly string plugin_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/plugin.min.js") ? Url("plugin.min.js") : Url("plugin.js");
                }
            
                [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                public static class preview {
                    private const string URLPATH = "~/Scripts/ckeditor/plugins/preview";
                    public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                    public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                    public static readonly string preview_html = Url("preview.html");
                }
            
                [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                public static class scayt {
                    private const string URLPATH = "~/Scripts/ckeditor/plugins/scayt";
                    public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                    public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                    public static class dialogs {
                        private const string URLPATH = "~/Scripts/ckeditor/plugins/scayt/dialogs";
                        public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                        public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                        public static readonly string options_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/options.min.js") ? Url("options.min.js") : Url("options.js");
                        public static readonly string toolbar_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/toolbar.min.css") ? Url("toolbar.min.css") : Url("toolbar.css");
                    }
                
                }
            
                [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                public static class showblocks {
                    private const string URLPATH = "~/Scripts/ckeditor/plugins/showblocks";
                    public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                    public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                    public static class images {
                        private const string URLPATH = "~/Scripts/ckeditor/plugins/showblocks/images";
                        public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                        public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                        public static readonly string block_address_png = Url("block_address.png");
                        public static readonly string block_blockquote_png = Url("block_blockquote.png");
                        public static readonly string block_div_png = Url("block_div.png");
                        public static readonly string block_h1_png = Url("block_h1.png");
                        public static readonly string block_h2_png = Url("block_h2.png");
                        public static readonly string block_h3_png = Url("block_h3.png");
                        public static readonly string block_h4_png = Url("block_h4.png");
                        public static readonly string block_h5_png = Url("block_h5.png");
                        public static readonly string block_h6_png = Url("block_h6.png");
                        public static readonly string block_p_png = Url("block_p.png");
                        public static readonly string block_pre_png = Url("block_pre.png");
                    }
                
                }
            
                [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                public static class smiley {
                    private const string URLPATH = "~/Scripts/ckeditor/plugins/smiley";
                    public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                    public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                    public static class dialogs {
                        private const string URLPATH = "~/Scripts/ckeditor/plugins/smiley/dialogs";
                        public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                        public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                        public static readonly string smiley_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/smiley.min.js") ? Url("smiley.min.js") : Url("smiley.js");
                    }
                
                    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                    public static class images {
                        private const string URLPATH = "~/Scripts/ckeditor/plugins/smiley/images";
                        public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                        public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                        public static readonly string angel_smile_gif = Url("angel_smile.gif");
                        public static readonly string angry_smile_gif = Url("angry_smile.gif");
                        public static readonly string broken_heart_gif = Url("broken_heart.gif");
                        public static readonly string confused_smile_gif = Url("confused_smile.gif");
                        public static readonly string cry_smile_gif = Url("cry_smile.gif");
                        public static readonly string devil_smile_gif = Url("devil_smile.gif");
                        public static readonly string embaressed_smile_gif = Url("embaressed_smile.gif");
                        public static readonly string envelope_gif = Url("envelope.gif");
                        public static readonly string heart_gif = Url("heart.gif");
                        public static readonly string kiss_gif = Url("kiss.gif");
                        public static readonly string lightbulb_gif = Url("lightbulb.gif");
                        public static readonly string omg_smile_gif = Url("omg_smile.gif");
                        public static readonly string regular_smile_gif = Url("regular_smile.gif");
                        public static readonly string sad_smile_gif = Url("sad_smile.gif");
                        public static readonly string shades_smile_gif = Url("shades_smile.gif");
                        public static readonly string teeth_smile_gif = Url("teeth_smile.gif");
                        public static readonly string thumbs_down_gif = Url("thumbs_down.gif");
                        public static readonly string thumbs_up_gif = Url("thumbs_up.gif");
                        public static readonly string tounge_smile_gif = Url("tounge_smile.gif");
                        public static readonly string whatchutalkingabout_smile_gif = Url("whatchutalkingabout_smile.gif");
                        public static readonly string wink_smile_gif = Url("wink_smile.gif");
                    }
                
                }
            
                [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                public static class specialchar {
                    private const string URLPATH = "~/Scripts/ckeditor/plugins/specialchar";
                    public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                    public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                    public static class dialogs {
                        private const string URLPATH = "~/Scripts/ckeditor/plugins/specialchar/dialogs";
                        public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                        public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                        public static readonly string specialchar_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/specialchar.min.js") ? Url("specialchar.min.js") : Url("specialchar.js");
                    }
                
                    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                    public static class lang {
                        private const string URLPATH = "~/Scripts/ckeditor/plugins/specialchar/lang";
                        public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                        public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                        public static readonly string _translationstatus_txt = Url("_translationstatus.txt");
                        public static readonly string cs_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/cs.min.js") ? Url("cs.min.js") : Url("cs.js");
                        public static readonly string cy_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/cy.min.js") ? Url("cy.min.js") : Url("cy.js");
                        public static readonly string de_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/de.min.js") ? Url("de.min.js") : Url("de.js");
                        public static readonly string el_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/el.min.js") ? Url("el.min.js") : Url("el.js");
                        public static readonly string en_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/en.min.js") ? Url("en.min.js") : Url("en.js");
                        public static readonly string eo_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/eo.min.js") ? Url("eo.min.js") : Url("eo.js");
                        public static readonly string et_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/et.min.js") ? Url("et.min.js") : Url("et.js");
                        public static readonly string fa_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/fa.min.js") ? Url("fa.min.js") : Url("fa.js");
                        public static readonly string fi_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/fi.min.js") ? Url("fi.min.js") : Url("fi.js");
                        public static readonly string fr_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/fr.min.js") ? Url("fr.min.js") : Url("fr.js");
                        public static readonly string he_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/he.min.js") ? Url("he.min.js") : Url("he.js");
                        public static readonly string hr_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/hr.min.js") ? Url("hr.min.js") : Url("hr.js");
                        public static readonly string it_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/it.min.js") ? Url("it.min.js") : Url("it.js");
                        public static readonly string ku_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/ku.min.js") ? Url("ku.min.js") : Url("ku.js");
                        public static readonly string nb_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/nb.min.js") ? Url("nb.min.js") : Url("nb.js");
                        public static readonly string nl_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/nl.min.js") ? Url("nl.min.js") : Url("nl.js");
                        public static readonly string no_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/no.min.js") ? Url("no.min.js") : Url("no.js");
                        public static readonly string pt_br_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/pt-br.min.js") ? Url("pt-br.min.js") : Url("pt-br.js");
                        public static readonly string tr_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/tr.min.js") ? Url("tr.min.js") : Url("tr.js");
                        public static readonly string ug_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/ug.min.js") ? Url("ug.min.js") : Url("ug.js");
                        public static readonly string zh_cn_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/zh-cn.min.js") ? Url("zh-cn.min.js") : Url("zh-cn.js");
                    }
                
                }
            
                [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                public static class styles {
                    private const string URLPATH = "~/Scripts/ckeditor/plugins/styles";
                    public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                    public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                    public static class styles_ {
                        private const string URLPATH = "~/Scripts/ckeditor/plugins/styles/styles";
                        public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                        public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                        public static readonly string default_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/default.min.js") ? Url("default.min.js") : Url("default.js");
                    }
                
                }
            
                [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                public static class stylesheetparser {
                    private const string URLPATH = "~/Scripts/ckeditor/plugins/stylesheetparser";
                    public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                    public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                    public static readonly string plugin_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/plugin.min.js") ? Url("plugin.min.js") : Url("plugin.js");
                }
            
                [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                public static class table {
                    private const string URLPATH = "~/Scripts/ckeditor/plugins/table";
                    public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                    public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                    public static class dialogs {
                        private const string URLPATH = "~/Scripts/ckeditor/plugins/table/dialogs";
                        public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                        public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                        public static readonly string table_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/table.min.js") ? Url("table.min.js") : Url("table.js");
                    }
                
                }
            
                [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                public static class tableresize {
                    private const string URLPATH = "~/Scripts/ckeditor/plugins/tableresize";
                    public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                    public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                    public static readonly string plugin_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/plugin.min.js") ? Url("plugin.min.js") : Url("plugin.js");
                }
            
                [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                public static class tabletools {
                    private const string URLPATH = "~/Scripts/ckeditor/plugins/tabletools";
                    public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                    public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                    public static class dialogs {
                        private const string URLPATH = "~/Scripts/ckeditor/plugins/tabletools/dialogs";
                        public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                        public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                        public static readonly string tableCell_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/tableCell.min.js") ? Url("tableCell.min.js") : Url("tableCell.js");
                    }
                
                }
            
                [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                public static class templates {
                    private const string URLPATH = "~/Scripts/ckeditor/plugins/templates";
                    public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                    public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                    public static class dialogs {
                        private const string URLPATH = "~/Scripts/ckeditor/plugins/templates/dialogs";
                        public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                        public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                        public static readonly string templates_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/templates.min.js") ? Url("templates.min.js") : Url("templates.js");
                    }
                
                    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                    public static class templates_ {
                        private const string URLPATH = "~/Scripts/ckeditor/plugins/templates/templates";
                        public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                        public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                        public static readonly string default_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/default.min.js") ? Url("default.min.js") : Url("default.js");
                        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                        public static class images {
                            private const string URLPATH = "~/Scripts/ckeditor/plugins/templates/templates/images";
                            public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                            public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                            public static readonly string template1_gif = Url("template1.gif");
                            public static readonly string template2_gif = Url("template2.gif");
                            public static readonly string template3_gif = Url("template3.gif");
                        }
                    
                    }
                
                }
            
                [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                public static class uicolor {
                    private const string URLPATH = "~/Scripts/ckeditor/plugins/uicolor";
                    public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                    public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                    public static class dialogs {
                        private const string URLPATH = "~/Scripts/ckeditor/plugins/uicolor/dialogs";
                        public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                        public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                        public static readonly string uicolor_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/uicolor.min.js") ? Url("uicolor.min.js") : Url("uicolor.js");
                    }
                
                    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                    public static class lang {
                        private const string URLPATH = "~/Scripts/ckeditor/plugins/uicolor/lang";
                        public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                        public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                        public static readonly string _translationstatus_txt = Url("_translationstatus.txt");
                        public static readonly string bg_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/bg.min.js") ? Url("bg.min.js") : Url("bg.js");
                        public static readonly string cs_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/cs.min.js") ? Url("cs.min.js") : Url("cs.js");
                        public static readonly string cy_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/cy.min.js") ? Url("cy.min.js") : Url("cy.js");
                        public static readonly string da_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/da.min.js") ? Url("da.min.js") : Url("da.js");
                        public static readonly string de_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/de.min.js") ? Url("de.min.js") : Url("de.js");
                        public static readonly string el_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/el.min.js") ? Url("el.min.js") : Url("el.js");
                        public static readonly string en_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/en.min.js") ? Url("en.min.js") : Url("en.js");
                        public static readonly string eo_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/eo.min.js") ? Url("eo.min.js") : Url("eo.js");
                        public static readonly string et_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/et.min.js") ? Url("et.min.js") : Url("et.js");
                        public static readonly string fa_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/fa.min.js") ? Url("fa.min.js") : Url("fa.js");
                        public static readonly string fi_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/fi.min.js") ? Url("fi.min.js") : Url("fi.js");
                        public static readonly string fr_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/fr.min.js") ? Url("fr.min.js") : Url("fr.js");
                        public static readonly string he_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/he.min.js") ? Url("he.min.js") : Url("he.js");
                        public static readonly string hr_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/hr.min.js") ? Url("hr.min.js") : Url("hr.js");
                        public static readonly string it_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/it.min.js") ? Url("it.min.js") : Url("it.js");
                        public static readonly string ku_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/ku.min.js") ? Url("ku.min.js") : Url("ku.js");
                        public static readonly string mk_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/mk.min.js") ? Url("mk.min.js") : Url("mk.js");
                        public static readonly string nb_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/nb.min.js") ? Url("nb.min.js") : Url("nb.js");
                        public static readonly string nl_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/nl.min.js") ? Url("nl.min.js") : Url("nl.js");
                        public static readonly string no_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/no.min.js") ? Url("no.min.js") : Url("no.js");
                        public static readonly string pl_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/pl.min.js") ? Url("pl.min.js") : Url("pl.js");
                        public static readonly string pt_br_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/pt-br.min.js") ? Url("pt-br.min.js") : Url("pt-br.js");
                        public static readonly string sk_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/sk.min.js") ? Url("sk.min.js") : Url("sk.js");
                        public static readonly string tr_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/tr.min.js") ? Url("tr.min.js") : Url("tr.js");
                        public static readonly string ug_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/ug.min.js") ? Url("ug.min.js") : Url("ug.js");
                        public static readonly string uk_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/uk.min.js") ? Url("uk.min.js") : Url("uk.js");
                        public static readonly string vi_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/vi.min.js") ? Url("vi.min.js") : Url("vi.js");
                        public static readonly string zh_cn_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/zh-cn.min.js") ? Url("zh-cn.min.js") : Url("zh-cn.js");
                    }
                
                    public static readonly string plugin_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/plugin.min.js") ? Url("plugin.min.js") : Url("plugin.js");
                    public static readonly string uicolor_gif = Url("uicolor.gif");
                    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                    public static class yui {
                        private const string URLPATH = "~/Scripts/ckeditor/plugins/uicolor/yui";
                        public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                        public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                        public static class assets {
                            private const string URLPATH = "~/Scripts/ckeditor/plugins/uicolor/yui/assets";
                            public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                            public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                            public static readonly string hue_bg_png = Url("hue_bg.png");
                            public static readonly string hue_thumb_png = Url("hue_thumb.png");
                            public static readonly string picker_mask_png = Url("picker_mask.png");
                            public static readonly string picker_thumb_png = Url("picker_thumb.png");
                            public static readonly string yui_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/yui.min.css") ? Url("yui.min.css") : Url("yui.css");
                        }
                    
                        public static readonly string yui_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/yui.min.js") ? Url("yui.min.js") : Url("yui.js");
                    }
                
                }
            
                [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                public static class wsc {
                    private const string URLPATH = "~/Scripts/ckeditor/plugins/wsc";
                    public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                    public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                    public static class dialogs {
                        private const string URLPATH = "~/Scripts/ckeditor/plugins/wsc/dialogs";
                        public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                        public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                        public static readonly string ciframe_html = Url("ciframe.html");
                        public static readonly string tmpFrameset_html = Url("tmpFrameset.html");
                        public static readonly string wsc_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/wsc.min.css") ? Url("wsc.min.css") : Url("wsc.css");
                        public static readonly string wsc_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/wsc.min.js") ? Url("wsc.min.js") : Url("wsc.js");
                    }
                
                }
            
                [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                public static class xml {
                    private const string URLPATH = "~/Scripts/ckeditor/plugins/xml";
                    public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                    public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                    public static readonly string plugin_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/plugin.min.js") ? Url("plugin.min.js") : Url("plugin.js");
                }
            
            }
        
            [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
            public static class skins {
                private const string URLPATH = "~/Scripts/ckeditor/skins";
                public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                public static class kama {
                    private const string URLPATH = "~/Scripts/ckeditor/skins/kama";
                    public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                    public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                    public static readonly string dialog_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/dialog.min.css") ? Url("dialog.min.css") : Url("dialog.css");
                    public static readonly string editor_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/editor.min.css") ? Url("editor.min.css") : Url("editor.css");
                    public static readonly string icons_png = Url("icons.png");
                    public static readonly string icons_rtl_png = Url("icons_rtl.png");
                    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                    public static class images {
                        private const string URLPATH = "~/Scripts/ckeditor/skins/kama/images";
                        public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                        public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                        public static readonly string dialog_sides_gif = Url("dialog_sides.gif");
                        public static readonly string dialog_sides_png = Url("dialog_sides.png");
                        public static readonly string dialog_sides_rtl_png = Url("dialog_sides_rtl.png");
                        public static readonly string mini_gif = Url("mini.gif");
                        public static readonly string noimage_png = Url("noimage.png");
                        public static readonly string sprites_png = Url("sprites.png");
                        public static readonly string sprites_ie6_png = Url("sprites_ie6.png");
                        public static readonly string toolbar_start_gif = Url("toolbar_start.gif");
                    }
                
                    public static readonly string skin_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/skin.min.js") ? Url("skin.min.js") : Url("skin.js");
                    public static readonly string templates_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/templates.min.css") ? Url("templates.min.css") : Url("templates.css");
                }
            
                [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                public static class office2003 {
                    private const string URLPATH = "~/Scripts/ckeditor/skins/office2003";
                    public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                    public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                    public static readonly string dialog_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/dialog.min.css") ? Url("dialog.min.css") : Url("dialog.css");
                    public static readonly string editor_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/editor.min.css") ? Url("editor.min.css") : Url("editor.css");
                    public static readonly string icons_png = Url("icons.png");
                    public static readonly string icons_rtl_png = Url("icons_rtl.png");
                    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                    public static class images {
                        private const string URLPATH = "~/Scripts/ckeditor/skins/office2003/images";
                        public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                        public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                        public static readonly string dialog_sides_gif = Url("dialog_sides.gif");
                        public static readonly string dialog_sides_png = Url("dialog_sides.png");
                        public static readonly string dialog_sides_rtl_png = Url("dialog_sides_rtl.png");
                        public static readonly string mini_gif = Url("mini.gif");
                        public static readonly string noimage_png = Url("noimage.png");
                        public static readonly string sprites_png = Url("sprites.png");
                        public static readonly string sprites_ie6_png = Url("sprites_ie6.png");
                    }
                
                    public static readonly string skin_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/skin.min.js") ? Url("skin.min.js") : Url("skin.js");
                    public static readonly string templates_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/templates.min.css") ? Url("templates.min.css") : Url("templates.css");
                }
            
                [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                public static class v2 {
                    private const string URLPATH = "~/Scripts/ckeditor/skins/v2";
                    public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                    public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                    public static readonly string dialog_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/dialog.min.css") ? Url("dialog.min.css") : Url("dialog.css");
                    public static readonly string editor_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/editor.min.css") ? Url("editor.min.css") : Url("editor.css");
                    public static readonly string icons_png = Url("icons.png");
                    public static readonly string icons_rtl_png = Url("icons_rtl.png");
                    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                    public static class images {
                        private const string URLPATH = "~/Scripts/ckeditor/skins/v2/images";
                        public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                        public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                        public static readonly string dialog_sides_gif = Url("dialog_sides.gif");
                        public static readonly string dialog_sides_png = Url("dialog_sides.png");
                        public static readonly string dialog_sides_rtl_png = Url("dialog_sides_rtl.png");
                        public static readonly string mini_gif = Url("mini.gif");
                        public static readonly string noimage_png = Url("noimage.png");
                        public static readonly string sprites_png = Url("sprites.png");
                        public static readonly string sprites_ie6_png = Url("sprites_ie6.png");
                        public static readonly string toolbar_start_gif = Url("toolbar_start.gif");
                    }
                
                    public static readonly string skin_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/skin.min.js") ? Url("skin.min.js") : Url("skin.js");
                    public static readonly string templates_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/templates.min.css") ? Url("templates.min.css") : Url("templates.css");
                }
            
            }
        
            [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
            public static class themes {
                private const string URLPATH = "~/Scripts/ckeditor/themes";
                public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                public static class @default {
                    private const string URLPATH = "~/Scripts/ckeditor/themes/default";
                    public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                    public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                    public static readonly string theme_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/theme.min.js") ? Url("theme.min.js") : Url("theme.js");
                }
            
            }
        
        }
    
        public static readonly string cloud_zoom_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/cloud-zoom.min.js") ? Url("cloud-zoom.min.js") : Url("cloud-zoom.js");
        public static readonly string fileinput_min_js = Url("fileinput.min.js");
        public static readonly string jquery_1_10_2_intellisense_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/jquery-1.10.2.intellisense.min.js") ? Url("jquery-1.10.2.intellisense.min.js") : Url("jquery-1.10.2.intellisense.js");
        public static readonly string jquery_1_10_2_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/jquery-1.10.2.min.js") ? Url("jquery-1.10.2.min.js") : Url("jquery-1.10.2.js");
        public static readonly string jquery_1_10_2_min_js = Url("jquery-1.10.2.min.js");
        public static readonly string jquery_1_10_2_min_map = Url("jquery-1.10.2.min.map");
        public static readonly string jquery_2_2_4_intellisense_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/jquery-2.2.4.intellisense.min.js") ? Url("jquery-2.2.4.intellisense.min.js") : Url("jquery-2.2.4.intellisense.js");
        public static readonly string jquery_2_2_4_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/jquery-2.2.4.min.js") ? Url("jquery-2.2.4.min.js") : Url("jquery-2.2.4.js");
        public static readonly string jquery_2_2_4_min_js = Url("jquery-2.2.4.min.js");
        public static readonly string jquery_2_2_4_min_map = Url("jquery-2.2.4.min.map");
        public static readonly string jquery_MVC_RemoveRow_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/jquery-MVC-RemoveRow.min.js") ? Url("jquery-MVC-RemoveRow.min.js") : Url("jquery-MVC-RemoveRow.js");
        public static readonly string jquery_autocomplete_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/jquery.autocomplete.min.js") ? Url("jquery.autocomplete.min.js") : Url("jquery.autocomplete.js");
        public static readonly string jquery_autocomplete_min_js = Url("jquery.autocomplete.min.js");
        public static readonly string jquery_autocomplete_min_js_map = Url("jquery.autocomplete.min.js.map");
        public static readonly string jquery_cookie_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/jquery.cookie.min.js") ? Url("jquery.cookie.min.js") : Url("jquery.cookie.js");
        public static readonly string jquery_lazyload_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/jquery.lazyload.min.js") ? Url("jquery.lazyload.min.js") : Url("jquery.lazyload.js");
        public static readonly string jquery_lazyload_min_js = Url("jquery.lazyload.min.js");
        public static readonly string jquery_sliderPro_min_js = Url("jquery.sliderPro.min.js");
        public static readonly string jquery_unobtrusive_ajax_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/jquery.unobtrusive-ajax.min.js") ? Url("jquery.unobtrusive-ajax.min.js") : Url("jquery.unobtrusive-ajax.js");
        public static readonly string jquery_unobtrusive_ajax_min_js = Url("jquery.unobtrusive-ajax.min.js");
        public static readonly string jquery_validate_vsdoc_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/jquery.validate-vsdoc.min.js") ? Url("jquery.validate-vsdoc.min.js") : Url("jquery.validate-vsdoc.js");
        public static readonly string jquery_validate_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/jquery.validate.min.js") ? Url("jquery.validate.min.js") : Url("jquery.validate.js");
        public static readonly string jquery_validate_min_js = Url("jquery.validate.min.js");
        public static readonly string jquery_validate_unobtrusive_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/jquery.validate.unobtrusive.min.js") ? Url("jquery.validate.unobtrusive.min.js") : Url("jquery.validate.unobtrusive.js");
        public static readonly string jquery_validate_unobtrusive_min_js = Url("jquery.validate.unobtrusive.min.js");
        public static readonly string json2_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/json2.min.js") ? Url("json2.min.js") : Url("json2.js");
        public static readonly string json2_min_js = Url("json2.min.js");
        public static readonly string lazysizes_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/lazysizes.min.js") ? Url("lazysizes.min.js") : Url("lazysizes.js");
        public static readonly string lazysizes_min_js = Url("lazysizes.min.js");
        public static readonly string modernizr_2_6_2_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/modernizr-2.6.2.min.js") ? Url("modernizr-2.6.2.min.js") : Url("modernizr-2.6.2.js");
        public static readonly string modernizr_2_8_3_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/modernizr-2.8.3.min.js") ? Url("modernizr-2.8.3.min.js") : Url("modernizr-2.8.3.js");
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public static class MyScripts {
            private const string URLPATH = "~/Scripts/MyScripts";
            public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
            public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
        }
    
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public static class noty {
            private const string URLPATH = "~/Scripts/noty";
            public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
            public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
            public static readonly string jquery_noty_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/jquery.noty.min.js") ? Url("jquery.noty.min.js") : Url("jquery.noty.js");
            [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
            public static class layouts {
                private const string URLPATH = "~/Scripts/noty/layouts";
                public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                public static readonly string bottom_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/bottom.min.js") ? Url("bottom.min.js") : Url("bottom.js");
                public static readonly string bottomCenter_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/bottomCenter.min.js") ? Url("bottomCenter.min.js") : Url("bottomCenter.js");
                public static readonly string bottomLeft_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/bottomLeft.min.js") ? Url("bottomLeft.min.js") : Url("bottomLeft.js");
                public static readonly string bottomRight_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/bottomRight.min.js") ? Url("bottomRight.min.js") : Url("bottomRight.js");
                public static readonly string center_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/center.min.js") ? Url("center.min.js") : Url("center.js");
                public static readonly string centerLeft_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/centerLeft.min.js") ? Url("centerLeft.min.js") : Url("centerLeft.js");
                public static readonly string centerRight_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/centerRight.min.js") ? Url("centerRight.min.js") : Url("centerRight.js");
                public static readonly string inline_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/inline.min.js") ? Url("inline.min.js") : Url("inline.js");
                public static readonly string top_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/top.min.js") ? Url("top.min.js") : Url("top.js");
                public static readonly string topCenter_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/topCenter.min.js") ? Url("topCenter.min.js") : Url("topCenter.js");
                public static readonly string topLeft_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/topLeft.min.js") ? Url("topLeft.min.js") : Url("topLeft.js");
                public static readonly string topRight_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/topRight.min.js") ? Url("topRight.min.js") : Url("topRight.js");
            }
        
            [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
            public static class packaged {
                private const string URLPATH = "~/Scripts/noty/packaged";
                public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                public static readonly string jquery_noty_packaged_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/jquery.noty.packaged.min.js") ? Url("jquery.noty.packaged.min.js") : Url("jquery.noty.packaged.js");
                public static readonly string jquery_noty_packaged_min_js = Url("jquery.noty.packaged.min.js");
            }
        
            [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
            public static class themes {
                private const string URLPATH = "~/Scripts/noty/themes";
                public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                public static readonly string bootstrap_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/bootstrap.min.js") ? Url("bootstrap.min.js") : Url("bootstrap.js");
                public static readonly string default_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/default.min.js") ? Url("default.min.js") : Url("default.js");
                public static readonly string relax_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/relax.min.js") ? Url("relax.min.js") : Url("relax.js");
            }
        
        }
    
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public static class plugins {
            private const string URLPATH = "~/Scripts/plugins";
            public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
            public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
            [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
            public static class dataTables {
                private const string URLPATH = "~/Scripts/plugins/dataTables";
                public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                public static readonly string dataTables_bootstrap_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/dataTables.bootstrap.min.js") ? Url("dataTables.bootstrap.min.js") : Url("dataTables.bootstrap.js");
                public static readonly string jquery_dataTables_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/jquery.dataTables.min.js") ? Url("jquery.dataTables.min.js") : Url("jquery.dataTables.js");
            }
        
            [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
            public static class flot {
                private const string URLPATH = "~/Scripts/plugins/flot";
                public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                public static readonly string excanvas_min_js = Url("excanvas.min.js");
                public static readonly string flot_data_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/flot-data.min.js") ? Url("flot-data.min.js") : Url("flot-data.js");
                public static readonly string jquery_flot_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/jquery.flot.min.js") ? Url("jquery.flot.min.js") : Url("jquery.flot.js");
                public static readonly string jquery_flot_pie_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/jquery.flot.pie.min.js") ? Url("jquery.flot.pie.min.js") : Url("jquery.flot.pie.js");
                public static readonly string jquery_flot_resize_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/jquery.flot.resize.min.js") ? Url("jquery.flot.resize.min.js") : Url("jquery.flot.resize.js");
                public static readonly string jquery_flot_tooltip_min_js = Url("jquery.flot.tooltip.min.js");
            }
        
            [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
            public static class metisMenu {
                private const string URLPATH = "~/Scripts/plugins/metisMenu";
                public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                public static readonly string metisMenu_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/metisMenu.min.js") ? Url("metisMenu.min.js") : Url("metisMenu.js");
                public static readonly string metisMenu_min_js = Url("metisMenu.min.js");
            }
        
            [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
            public static class morris {
                private const string URLPATH = "~/Scripts/plugins/morris";
                public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                public static readonly string morris_data_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/morris-data.min.js") ? Url("morris-data.min.js") : Url("morris-data.js");
                public static readonly string morris_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/morris.min.js") ? Url("morris.min.js") : Url("morris.js");
                public static readonly string morris_min_js = Url("morris.min.js");
                public static readonly string raphael_min_js = Url("raphael.min.js");
            }
        
        }
    
        public static readonly string respond_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/respond.min.js") ? Url("respond.min.js") : Url("respond.js");
        public static readonly string respond_matchmedia_addListener_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/respond.matchmedia.addListener.min.js") ? Url("respond.matchmedia.addListener.min.js") : Url("respond.matchmedia.addListener.js");
        public static readonly string respond_matchmedia_addListener_min_js = Url("respond.matchmedia.addListener.min.js");
        public static readonly string respond_min_js = Url("respond.min.js");
        public static readonly string star_rating_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/star-rating.min.js") ? Url("star-rating.min.js") : Url("star-rating.js");
        public static readonly string star_rating_min_js = Url("star-rating.min.js");
        public static readonly string starRating_plugin_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/starRating-plugin.min.js") ? Url("starRating-plugin.min.js") : Url("starRating-plugin.js");
        public static readonly string sweet_alert_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/sweet-alert.min.js") ? Url("sweet-alert.min.js") : Url("sweet-alert.js");
        public static readonly string sweet_alert_min_js = Url("sweet-alert.min.js");
        public static readonly string sweet_alert_min_js_map = Url("sweet-alert.min.js.map");
        public static readonly string turbolinks_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/turbolinks.min.js") ? Url("turbolinks.min.js") : Url("turbolinks.js");
        public static readonly string turbolinks_min_js = Url("turbolinks.min.js");
    }

    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
    public static class Content {
        private const string URLPATH = "~/Content";
        public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
        public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
        public static readonly string animate_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/animate.min.css") ? Url("animate.min.css") : Url("animate.css");
        public static readonly string animate_min_css = Url("animate.min.css");
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public static class avatar {
            private const string URLPATH = "~/Content/avatar";
            public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
            public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
            public static readonly string default_jpg = Url("default.jpg");
        }
    
        public static readonly string bootstrap_select_min_css = Url("bootstrap-select.min.css");
        public static readonly string bootstrap_theme_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/bootstrap-theme.min.css") ? Url("bootstrap-theme.min.css") : Url("bootstrap-theme.css");
        public static readonly string bootstrap_theme_css_map = Url("bootstrap-theme.css.map");
        public static readonly string bootstrap_theme_min_css = Url("bootstrap-theme.min.css");
        public static readonly string bootstrap_theme_min_css_map = Url("bootstrap-theme.min.css.map");
        public static readonly string bootstrap_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/bootstrap.min.css") ? Url("bootstrap.min.css") : Url("bootstrap.css");
        public static readonly string bootstrap_css_map = Url("bootstrap.css.map");
        public static readonly string bootstrap_min_css = Url("bootstrap.min.css");
        public static readonly string bootstrap_min_css_map = Url("bootstrap.min.css.map");
        public static readonly string cloud_zoom_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/cloud-zoom.min.css") ? Url("cloud-zoom.min.css") : Url("cloud-zoom.css");
        public static readonly string fileinput_min_css = Url("fileinput.min.css");
        public static readonly string font_awesome_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/font-awesome.min.css") ? Url("font-awesome.min.css") : Url("font-awesome.css");
        public static readonly string font_awesome_min_css = Url("font-awesome.min.css");
        public static readonly string jquery_autocomplete_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/jquery.autocomplete.min.css") ? Url("jquery.autocomplete.min.css") : Url("jquery.autocomplete.css");
        public static readonly string master_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/master.min.css") ? Url("master.min.css") : Url("master.css");
        public static readonly string mycss_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/mycss.min.css") ? Url("mycss.min.css") : Url("mycss.css");
        public static readonly string PagedList_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/PagedList.min.css") ? Url("PagedList.min.css") : Url("PagedList.css");
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public static class plugins {
            private const string URLPATH = "~/Content/plugins";
            public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
            public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
            public static readonly string dataTables_bootstrap_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/dataTables.bootstrap.min.css") ? Url("dataTables.bootstrap.min.css") : Url("dataTables.bootstrap.css");
            [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
            public static class metisMenu {
                private const string URLPATH = "~/Content/plugins/metisMenu";
                public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                public static readonly string metisMenu_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/metisMenu.min.css") ? Url("metisMenu.min.css") : Url("metisMenu.css");
                public static readonly string metisMenu_min_css = Url("metisMenu.min.css");
            }
        
            public static readonly string morris_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/morris.min.css") ? Url("morris.min.css") : Url("morris.css");
            public static readonly string social_buttons_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/social-buttons.min.css") ? Url("social-buttons.min.css") : Url("social-buttons.css");
            public static readonly string timeline_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/timeline.min.css") ? Url("timeline.min.css") : Url("timeline.css");
        }
    
        public static readonly string product_style_common_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/product-style-common.min.css") ? Url("product-style-common.min.css") : Url("product-style-common.css");
        public static readonly string product_style_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/product-style.min.css") ? Url("product-style.min.css") : Url("product-style.css");
        public static readonly string product_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/product.min.css") ? Url("product.min.css") : Url("product.css");
        public static readonly string sb_admin_2_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/sb-admin-2.min.css") ? Url("sb-admin-2.min.css") : Url("sb-admin-2.css");
        public static readonly string search_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/search.min.css") ? Url("search.min.css") : Url("search.css");
        public static readonly string Site_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/Site.min.css") ? Url("Site.min.css") : Url("Site.css");
        public static readonly string slider_pro_min_css = Url("slider-pro.min.css");
        public static readonly string slideshow_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/slideshow.min.css") ? Url("slideshow.min.css") : Url("slideshow.css");
        public static readonly string star_rating_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/star-rating.min.css") ? Url("star-rating.min.css") : Url("star-rating.css");
        public static readonly string star_rating_min_css = Url("star-rating.min.css");
        public static readonly string style_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/style.min.css") ? Url("style.min.css") : Url("style.css");
        public static readonly string sweet_alert_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/sweet-alert.min.css") ? Url("sweet-alert.min.css") : Url("sweet-alert.css");
        public static readonly string user_panel_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/user-panel.min.css") ? Url("user-panel.min.css") : Url("user-panel.css");
    }

    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
    public static class Views {
        private const string URLPATH = "~/Views";
        public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
        public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public static class Home {
            private const string URLPATH = "~/Views/Home";
            public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
            public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
        }
    
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public static class Shared {
            private const string URLPATH = "~/Views/Shared";
            public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
            public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
            [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
            public static class DisplayTemplates {
                private const string URLPATH = "~/Views/Shared/DisplayTemplates";
                public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
            }
        
            [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
            public static class EditorTemplates {
                private const string URLPATH = "~/Views/Shared/EditorTemplates";
                public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
            }
        
        }
    
        public static readonly string web_config = Url("web.config");
    }

    
    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
    public static partial class Bundles
    {
        public static partial class Scripts 
        {
            public static partial class ckeditor 
            {
                public static partial class adapters 
                {
                    public static class Assets
                    {
                        public const string jquery_js = "~/Scripts/ckeditor/adapters/jquery.js"; 
                    }
                }
                public static partial class images 
                {
                    public static class Assets
                    {
                    }
                }
                public static partial class lang 
                {
                    public static class Assets
                    {
                        public const string _languages_js = "~/Scripts/ckeditor/lang/_languages.js"; 
                        public const string af_js = "~/Scripts/ckeditor/lang/af.js"; 
                        public const string ar_js = "~/Scripts/ckeditor/lang/ar.js"; 
                        public const string bg_js = "~/Scripts/ckeditor/lang/bg.js"; 
                        public const string bn_js = "~/Scripts/ckeditor/lang/bn.js"; 
                        public const string bs_js = "~/Scripts/ckeditor/lang/bs.js"; 
                        public const string ca_js = "~/Scripts/ckeditor/lang/ca.js"; 
                        public const string cs_js = "~/Scripts/ckeditor/lang/cs.js"; 
                        public const string cy_js = "~/Scripts/ckeditor/lang/cy.js"; 
                        public const string da_js = "~/Scripts/ckeditor/lang/da.js"; 
                        public const string de_js = "~/Scripts/ckeditor/lang/de.js"; 
                        public const string el_js = "~/Scripts/ckeditor/lang/el.js"; 
                        public const string en_au_js = "~/Scripts/ckeditor/lang/en-au.js"; 
                        public const string en_ca_js = "~/Scripts/ckeditor/lang/en-ca.js"; 
                        public const string en_gb_js = "~/Scripts/ckeditor/lang/en-gb.js"; 
                        public const string en_js = "~/Scripts/ckeditor/lang/en.js"; 
                        public const string eo_js = "~/Scripts/ckeditor/lang/eo.js"; 
                        public const string es_js = "~/Scripts/ckeditor/lang/es.js"; 
                        public const string et_js = "~/Scripts/ckeditor/lang/et.js"; 
                        public const string eu_js = "~/Scripts/ckeditor/lang/eu.js"; 
                        public const string fa_js = "~/Scripts/ckeditor/lang/fa.js"; 
                        public const string fi_js = "~/Scripts/ckeditor/lang/fi.js"; 
                        public const string fo_js = "~/Scripts/ckeditor/lang/fo.js"; 
                        public const string fr_ca_js = "~/Scripts/ckeditor/lang/fr-ca.js"; 
                        public const string fr_js = "~/Scripts/ckeditor/lang/fr.js"; 
                        public const string gl_js = "~/Scripts/ckeditor/lang/gl.js"; 
                        public const string gu_js = "~/Scripts/ckeditor/lang/gu.js"; 
                        public const string he_js = "~/Scripts/ckeditor/lang/he.js"; 
                        public const string hi_js = "~/Scripts/ckeditor/lang/hi.js"; 
                        public const string hr_js = "~/Scripts/ckeditor/lang/hr.js"; 
                        public const string hu_js = "~/Scripts/ckeditor/lang/hu.js"; 
                        public const string id_js = "~/Scripts/ckeditor/lang/id.js"; 
                        public const string is_js = "~/Scripts/ckeditor/lang/is.js"; 
                        public const string it_js = "~/Scripts/ckeditor/lang/it.js"; 
                        public const string ja_js = "~/Scripts/ckeditor/lang/ja.js"; 
                        public const string ka_js = "~/Scripts/ckeditor/lang/ka.js"; 
                        public const string km_js = "~/Scripts/ckeditor/lang/km.js"; 
                        public const string ko_js = "~/Scripts/ckeditor/lang/ko.js"; 
                        public const string ku_js = "~/Scripts/ckeditor/lang/ku.js"; 
                        public const string lt_js = "~/Scripts/ckeditor/lang/lt.js"; 
                        public const string lv_js = "~/Scripts/ckeditor/lang/lv.js"; 
                        public const string mk_js = "~/Scripts/ckeditor/lang/mk.js"; 
                        public const string mn_js = "~/Scripts/ckeditor/lang/mn.js"; 
                        public const string ms_js = "~/Scripts/ckeditor/lang/ms.js"; 
                        public const string nb_js = "~/Scripts/ckeditor/lang/nb.js"; 
                        public const string nl_js = "~/Scripts/ckeditor/lang/nl.js"; 
                        public const string no_js = "~/Scripts/ckeditor/lang/no.js"; 
                        public const string pl_js = "~/Scripts/ckeditor/lang/pl.js"; 
                        public const string pt_br_js = "~/Scripts/ckeditor/lang/pt-br.js"; 
                        public const string pt_js = "~/Scripts/ckeditor/lang/pt.js"; 
                        public const string ro_js = "~/Scripts/ckeditor/lang/ro.js"; 
                        public const string ru_js = "~/Scripts/ckeditor/lang/ru.js"; 
                        public const string sk_js = "~/Scripts/ckeditor/lang/sk.js"; 
                        public const string sl_js = "~/Scripts/ckeditor/lang/sl.js"; 
                        public const string sr_latn_js = "~/Scripts/ckeditor/lang/sr-latn.js"; 
                        public const string sr_js = "~/Scripts/ckeditor/lang/sr.js"; 
                        public const string sv_js = "~/Scripts/ckeditor/lang/sv.js"; 
                        public const string th_js = "~/Scripts/ckeditor/lang/th.js"; 
                        public const string tr_js = "~/Scripts/ckeditor/lang/tr.js"; 
                        public const string ug_js = "~/Scripts/ckeditor/lang/ug.js"; 
                        public const string uk_js = "~/Scripts/ckeditor/lang/uk.js"; 
                        public const string vi_js = "~/Scripts/ckeditor/lang/vi.js"; 
                        public const string zh_cn_js = "~/Scripts/ckeditor/lang/zh-cn.js"; 
                        public const string zh_js = "~/Scripts/ckeditor/lang/zh.js"; 
                    }
                }
                public static partial class plugins 
                {
                    public static partial class a11yhelp 
                    {
                        public static partial class dialogs 
                        {
                            public static class Assets
                            {
                                public const string a11yhelp_js = "~/Scripts/ckeditor/plugins/a11yhelp/dialogs/a11yhelp.js"; 
                            }
                        }
                        public static partial class lang 
                        {
                            public static class Assets
                            {
                                public const string cs_js = "~/Scripts/ckeditor/plugins/a11yhelp/lang/cs.js"; 
                                public const string cy_js = "~/Scripts/ckeditor/plugins/a11yhelp/lang/cy.js"; 
                                public const string da_js = "~/Scripts/ckeditor/plugins/a11yhelp/lang/da.js"; 
                                public const string de_js = "~/Scripts/ckeditor/plugins/a11yhelp/lang/de.js"; 
                                public const string el_js = "~/Scripts/ckeditor/plugins/a11yhelp/lang/el.js"; 
                                public const string en_js = "~/Scripts/ckeditor/plugins/a11yhelp/lang/en.js"; 
                                public const string eo_js = "~/Scripts/ckeditor/plugins/a11yhelp/lang/eo.js"; 
                                public const string fa_js = "~/Scripts/ckeditor/plugins/a11yhelp/lang/fa.js"; 
                                public const string fi_js = "~/Scripts/ckeditor/plugins/a11yhelp/lang/fi.js"; 
                                public const string fr_js = "~/Scripts/ckeditor/plugins/a11yhelp/lang/fr.js"; 
                                public const string gu_js = "~/Scripts/ckeditor/plugins/a11yhelp/lang/gu.js"; 
                                public const string he_js = "~/Scripts/ckeditor/plugins/a11yhelp/lang/he.js"; 
                                public const string it_js = "~/Scripts/ckeditor/plugins/a11yhelp/lang/it.js"; 
                                public const string ku_js = "~/Scripts/ckeditor/plugins/a11yhelp/lang/ku.js"; 
                                public const string mk_js = "~/Scripts/ckeditor/plugins/a11yhelp/lang/mk.js"; 
                                public const string nb_js = "~/Scripts/ckeditor/plugins/a11yhelp/lang/nb.js"; 
                                public const string nl_js = "~/Scripts/ckeditor/plugins/a11yhelp/lang/nl.js"; 
                                public const string no_js = "~/Scripts/ckeditor/plugins/a11yhelp/lang/no.js"; 
                                public const string pt_br_js = "~/Scripts/ckeditor/plugins/a11yhelp/lang/pt-br.js"; 
                                public const string ro_js = "~/Scripts/ckeditor/plugins/a11yhelp/lang/ro.js"; 
                                public const string sk_js = "~/Scripts/ckeditor/plugins/a11yhelp/lang/sk.js"; 
                                public const string tr_js = "~/Scripts/ckeditor/plugins/a11yhelp/lang/tr.js"; 
                                public const string ug_js = "~/Scripts/ckeditor/plugins/a11yhelp/lang/ug.js"; 
                                public const string vi_js = "~/Scripts/ckeditor/plugins/a11yhelp/lang/vi.js"; 
                                public const string zh_cn_js = "~/Scripts/ckeditor/plugins/a11yhelp/lang/zh-cn.js"; 
                            }
                        }
                        public static class Assets
                        {
                        }
                    }
                    public static partial class about 
                    {
                        public static partial class dialogs 
                        {
                            public static class Assets
                            {
                                public const string about_js = "~/Scripts/ckeditor/plugins/about/dialogs/about.js"; 
                            }
                        }
                        public static class Assets
                        {
                        }
                    }
                    public static partial class adobeair 
                    {
                        public static class Assets
                        {
                            public const string plugin_js = "~/Scripts/ckeditor/plugins/adobeair/plugin.js"; 
                        }
                    }
                    public static partial class ajax 
                    {
                        public static class Assets
                        {
                            public const string plugin_js = "~/Scripts/ckeditor/plugins/ajax/plugin.js"; 
                        }
                    }
                    public static partial class autogrow 
                    {
                        public static class Assets
                        {
                            public const string plugin_js = "~/Scripts/ckeditor/plugins/autogrow/plugin.js"; 
                        }
                    }
                    public static partial class bbcode 
                    {
                        public static class Assets
                        {
                            public const string plugin_js = "~/Scripts/ckeditor/plugins/bbcode/plugin.js"; 
                        }
                    }
                    public static partial class clipboard 
                    {
                        public static partial class dialogs 
                        {
                            public static class Assets
                            {
                                public const string paste_js = "~/Scripts/ckeditor/plugins/clipboard/dialogs/paste.js"; 
                            }
                        }
                        public static class Assets
                        {
                        }
                    }
                    public static partial class colordialog 
                    {
                        public static partial class dialogs 
                        {
                            public static class Assets
                            {
                                public const string colordialog_js = "~/Scripts/ckeditor/plugins/colordialog/dialogs/colordialog.js"; 
                            }
                        }
                        public static class Assets
                        {
                        }
                    }
                    public static partial class devtools 
                    {
                        public static partial class lang 
                        {
                            public static class Assets
                            {
                                public const string bg_js = "~/Scripts/ckeditor/plugins/devtools/lang/bg.js"; 
                                public const string cs_js = "~/Scripts/ckeditor/plugins/devtools/lang/cs.js"; 
                                public const string cy_js = "~/Scripts/ckeditor/plugins/devtools/lang/cy.js"; 
                                public const string da_js = "~/Scripts/ckeditor/plugins/devtools/lang/da.js"; 
                                public const string de_js = "~/Scripts/ckeditor/plugins/devtools/lang/de.js"; 
                                public const string el_js = "~/Scripts/ckeditor/plugins/devtools/lang/el.js"; 
                                public const string en_js = "~/Scripts/ckeditor/plugins/devtools/lang/en.js"; 
                                public const string eo_js = "~/Scripts/ckeditor/plugins/devtools/lang/eo.js"; 
                                public const string et_js = "~/Scripts/ckeditor/plugins/devtools/lang/et.js"; 
                                public const string fa_js = "~/Scripts/ckeditor/plugins/devtools/lang/fa.js"; 
                                public const string fi_js = "~/Scripts/ckeditor/plugins/devtools/lang/fi.js"; 
                                public const string fr_js = "~/Scripts/ckeditor/plugins/devtools/lang/fr.js"; 
                                public const string gu_js = "~/Scripts/ckeditor/plugins/devtools/lang/gu.js"; 
                                public const string he_js = "~/Scripts/ckeditor/plugins/devtools/lang/he.js"; 
                                public const string hr_js = "~/Scripts/ckeditor/plugins/devtools/lang/hr.js"; 
                                public const string it_js = "~/Scripts/ckeditor/plugins/devtools/lang/it.js"; 
                                public const string ku_js = "~/Scripts/ckeditor/plugins/devtools/lang/ku.js"; 
                                public const string nb_js = "~/Scripts/ckeditor/plugins/devtools/lang/nb.js"; 
                                public const string nl_js = "~/Scripts/ckeditor/plugins/devtools/lang/nl.js"; 
                                public const string no_js = "~/Scripts/ckeditor/plugins/devtools/lang/no.js"; 
                                public const string pl_js = "~/Scripts/ckeditor/plugins/devtools/lang/pl.js"; 
                                public const string pt_br_js = "~/Scripts/ckeditor/plugins/devtools/lang/pt-br.js"; 
                                public const string sk_js = "~/Scripts/ckeditor/plugins/devtools/lang/sk.js"; 
                                public const string tr_js = "~/Scripts/ckeditor/plugins/devtools/lang/tr.js"; 
                                public const string ug_js = "~/Scripts/ckeditor/plugins/devtools/lang/ug.js"; 
                                public const string uk_js = "~/Scripts/ckeditor/plugins/devtools/lang/uk.js"; 
                                public const string vi_js = "~/Scripts/ckeditor/plugins/devtools/lang/vi.js"; 
                                public const string zh_cn_js = "~/Scripts/ckeditor/plugins/devtools/lang/zh-cn.js"; 
                            }
                        }
                        public static class Assets
                        {
                            public const string plugin_js = "~/Scripts/ckeditor/plugins/devtools/plugin.js"; 
                        }
                    }
                    public static partial class dialog 
                    {
                        public static class Assets
                        {
                            public const string dialogDefinition_js = "~/Scripts/ckeditor/plugins/dialog/dialogDefinition.js"; 
                        }
                    }
                    public static partial class div 
                    {
                        public static partial class dialogs 
                        {
                            public static class Assets
                            {
                                public const string div_js = "~/Scripts/ckeditor/plugins/div/dialogs/div.js"; 
                            }
                        }
                        public static class Assets
                        {
                        }
                    }
                    public static partial class docprops 
                    {
                        public static partial class dialogs 
                        {
                            public static class Assets
                            {
                                public const string docprops_js = "~/Scripts/ckeditor/plugins/docprops/dialogs/docprops.js"; 
                            }
                        }
                        public static class Assets
                        {
                            public const string plugin_js = "~/Scripts/ckeditor/plugins/docprops/plugin.js"; 
                        }
                    }
                    public static partial class find 
                    {
                        public static partial class dialogs 
                        {
                            public static class Assets
                            {
                                public const string find_js = "~/Scripts/ckeditor/plugins/find/dialogs/find.js"; 
                            }
                        }
                        public static class Assets
                        {
                        }
                    }
                    public static partial class flash 
                    {
                        public static partial class dialogs 
                        {
                            public static class Assets
                            {
                                public const string flash_js = "~/Scripts/ckeditor/plugins/flash/dialogs/flash.js"; 
                            }
                        }
                        public static partial class images 
                        {
                            public static class Assets
                            {
                            }
                        }
                        public static class Assets
                        {
                        }
                    }
                    public static partial class forms 
                    {
                        public static partial class dialogs 
                        {
                            public static class Assets
                            {
                                public const string button_js = "~/Scripts/ckeditor/plugins/forms/dialogs/button.js"; 
                                public const string checkbox_js = "~/Scripts/ckeditor/plugins/forms/dialogs/checkbox.js"; 
                                public const string form_js = "~/Scripts/ckeditor/plugins/forms/dialogs/form.js"; 
                                public const string hiddenfield_js = "~/Scripts/ckeditor/plugins/forms/dialogs/hiddenfield.js"; 
                                public const string radio_js = "~/Scripts/ckeditor/plugins/forms/dialogs/radio.js"; 
                                public const string select_js = "~/Scripts/ckeditor/plugins/forms/dialogs/select.js"; 
                                public const string textarea_js = "~/Scripts/ckeditor/plugins/forms/dialogs/textarea.js"; 
                                public const string textfield_js = "~/Scripts/ckeditor/plugins/forms/dialogs/textfield.js"; 
                            }
                        }
                        public static partial class images 
                        {
                            public static class Assets
                            {
                            }
                        }
                        public static class Assets
                        {
                        }
                    }
                    public static partial class iframe 
                    {
                        public static partial class dialogs 
                        {
                            public static class Assets
                            {
                                public const string iframe_js = "~/Scripts/ckeditor/plugins/iframe/dialogs/iframe.js"; 
                            }
                        }
                        public static partial class images 
                        {
                            public static class Assets
                            {
                            }
                        }
                        public static class Assets
                        {
                        }
                    }
                    public static partial class iframedialog 
                    {
                        public static class Assets
                        {
                            public const string plugin_js = "~/Scripts/ckeditor/plugins/iframedialog/plugin.js"; 
                        }
                    }
                    public static partial class image 
                    {
                        public static partial class dialogs 
                        {
                            public static class Assets
                            {
                                public const string image_js = "~/Scripts/ckeditor/plugins/image/dialogs/image.js"; 
                            }
                        }
                        public static class Assets
                        {
                        }
                    }
                    public static partial class link 
                    {
                        public static partial class dialogs 
                        {
                            public static class Assets
                            {
                                public const string anchor_js = "~/Scripts/ckeditor/plugins/link/dialogs/anchor.js"; 
                                public const string link_js = "~/Scripts/ckeditor/plugins/link/dialogs/link.js"; 
                            }
                        }
                        public static partial class images 
                        {
                            public static class Assets
                            {
                            }
                        }
                        public static class Assets
                        {
                        }
                    }
                    public static partial class liststyle 
                    {
                        public static partial class dialogs 
                        {
                            public static class Assets
                            {
                                public const string liststyle_js = "~/Scripts/ckeditor/plugins/liststyle/dialogs/liststyle.js"; 
                            }
                        }
                        public static class Assets
                        {
                        }
                    }
                    public static partial class pagebreak 
                    {
                        public static partial class images 
                        {
                            public static class Assets
                            {
                            }
                        }
                        public static class Assets
                        {
                        }
                    }
                    public static partial class pastefromword 
                    {
                        public static partial class filter 
                        {
                            public static class Assets
                            {
                                public const string default_js = "~/Scripts/ckeditor/plugins/pastefromword/filter/default.js"; 
                            }
                        }
                        public static class Assets
                        {
                        }
                    }
                    public static partial class pastetext 
                    {
                        public static partial class dialogs 
                        {
                            public static class Assets
                            {
                                public const string pastetext_js = "~/Scripts/ckeditor/plugins/pastetext/dialogs/pastetext.js"; 
                            }
                        }
                        public static class Assets
                        {
                        }
                    }
                    public static partial class placeholder 
                    {
                        public static partial class dialogs 
                        {
                            public static class Assets
                            {
                                public const string placeholder_js = "~/Scripts/ckeditor/plugins/placeholder/dialogs/placeholder.js"; 
                            }
                        }
                        public static partial class lang 
                        {
                            public static class Assets
                            {
                                public const string bg_js = "~/Scripts/ckeditor/plugins/placeholder/lang/bg.js"; 
                                public const string cs_js = "~/Scripts/ckeditor/plugins/placeholder/lang/cs.js"; 
                                public const string cy_js = "~/Scripts/ckeditor/plugins/placeholder/lang/cy.js"; 
                                public const string da_js = "~/Scripts/ckeditor/plugins/placeholder/lang/da.js"; 
                                public const string de_js = "~/Scripts/ckeditor/plugins/placeholder/lang/de.js"; 
                                public const string el_js = "~/Scripts/ckeditor/plugins/placeholder/lang/el.js"; 
                                public const string en_js = "~/Scripts/ckeditor/plugins/placeholder/lang/en.js"; 
                                public const string eo_js = "~/Scripts/ckeditor/plugins/placeholder/lang/eo.js"; 
                                public const string et_js = "~/Scripts/ckeditor/plugins/placeholder/lang/et.js"; 
                                public const string fa_js = "~/Scripts/ckeditor/plugins/placeholder/lang/fa.js"; 
                                public const string fi_js = "~/Scripts/ckeditor/plugins/placeholder/lang/fi.js"; 
                                public const string fr_js = "~/Scripts/ckeditor/plugins/placeholder/lang/fr.js"; 
                                public const string he_js = "~/Scripts/ckeditor/plugins/placeholder/lang/he.js"; 
                                public const string hr_js = "~/Scripts/ckeditor/plugins/placeholder/lang/hr.js"; 
                                public const string it_js = "~/Scripts/ckeditor/plugins/placeholder/lang/it.js"; 
                                public const string ku_js = "~/Scripts/ckeditor/plugins/placeholder/lang/ku.js"; 
                                public const string nb_js = "~/Scripts/ckeditor/plugins/placeholder/lang/nb.js"; 
                                public const string nl_js = "~/Scripts/ckeditor/plugins/placeholder/lang/nl.js"; 
                                public const string no_js = "~/Scripts/ckeditor/plugins/placeholder/lang/no.js"; 
                                public const string pl_js = "~/Scripts/ckeditor/plugins/placeholder/lang/pl.js"; 
                                public const string pt_br_js = "~/Scripts/ckeditor/plugins/placeholder/lang/pt-br.js"; 
                                public const string sk_js = "~/Scripts/ckeditor/plugins/placeholder/lang/sk.js"; 
                                public const string tr_js = "~/Scripts/ckeditor/plugins/placeholder/lang/tr.js"; 
                                public const string ug_js = "~/Scripts/ckeditor/plugins/placeholder/lang/ug.js"; 
                                public const string uk_js = "~/Scripts/ckeditor/plugins/placeholder/lang/uk.js"; 
                                public const string vi_js = "~/Scripts/ckeditor/plugins/placeholder/lang/vi.js"; 
                                public const string zh_cn_js = "~/Scripts/ckeditor/plugins/placeholder/lang/zh-cn.js"; 
                            }
                        }
                        public static class Assets
                        {
                            public const string plugin_js = "~/Scripts/ckeditor/plugins/placeholder/plugin.js"; 
                        }
                    }
                    public static partial class preview 
                    {
                        public static class Assets
                        {
                        }
                    }
                    public static partial class scayt 
                    {
                        public static partial class dialogs 
                        {
                            public static class Assets
                            {
                                public const string options_js = "~/Scripts/ckeditor/plugins/scayt/dialogs/options.js"; 
                                public const string toolbar_css = "~/Scripts/ckeditor/plugins/scayt/dialogs/toolbar.css";
                            }
                        }
                        public static class Assets
                        {
                        }
                    }
                    public static partial class showblocks 
                    {
                        public static partial class images 
                        {
                            public static class Assets
                            {
                            }
                        }
                        public static class Assets
                        {
                        }
                    }
                    public static partial class smiley 
                    {
                        public static partial class dialogs 
                        {
                            public static class Assets
                            {
                                public const string smiley_js = "~/Scripts/ckeditor/plugins/smiley/dialogs/smiley.js"; 
                            }
                        }
                        public static partial class images 
                        {
                            public static class Assets
                            {
                            }
                        }
                        public static class Assets
                        {
                        }
                    }
                    public static partial class specialchar 
                    {
                        public static partial class dialogs 
                        {
                            public static class Assets
                            {
                                public const string specialchar_js = "~/Scripts/ckeditor/plugins/specialchar/dialogs/specialchar.js"; 
                            }
                        }
                        public static partial class lang 
                        {
                            public static class Assets
                            {
                                public const string cs_js = "~/Scripts/ckeditor/plugins/specialchar/lang/cs.js"; 
                                public const string cy_js = "~/Scripts/ckeditor/plugins/specialchar/lang/cy.js"; 
                                public const string de_js = "~/Scripts/ckeditor/plugins/specialchar/lang/de.js"; 
                                public const string el_js = "~/Scripts/ckeditor/plugins/specialchar/lang/el.js"; 
                                public const string en_js = "~/Scripts/ckeditor/plugins/specialchar/lang/en.js"; 
                                public const string eo_js = "~/Scripts/ckeditor/plugins/specialchar/lang/eo.js"; 
                                public const string et_js = "~/Scripts/ckeditor/plugins/specialchar/lang/et.js"; 
                                public const string fa_js = "~/Scripts/ckeditor/plugins/specialchar/lang/fa.js"; 
                                public const string fi_js = "~/Scripts/ckeditor/plugins/specialchar/lang/fi.js"; 
                                public const string fr_js = "~/Scripts/ckeditor/plugins/specialchar/lang/fr.js"; 
                                public const string he_js = "~/Scripts/ckeditor/plugins/specialchar/lang/he.js"; 
                                public const string hr_js = "~/Scripts/ckeditor/plugins/specialchar/lang/hr.js"; 
                                public const string it_js = "~/Scripts/ckeditor/plugins/specialchar/lang/it.js"; 
                                public const string ku_js = "~/Scripts/ckeditor/plugins/specialchar/lang/ku.js"; 
                                public const string nb_js = "~/Scripts/ckeditor/plugins/specialchar/lang/nb.js"; 
                                public const string nl_js = "~/Scripts/ckeditor/plugins/specialchar/lang/nl.js"; 
                                public const string no_js = "~/Scripts/ckeditor/plugins/specialchar/lang/no.js"; 
                                public const string pt_br_js = "~/Scripts/ckeditor/plugins/specialchar/lang/pt-br.js"; 
                                public const string tr_js = "~/Scripts/ckeditor/plugins/specialchar/lang/tr.js"; 
                                public const string ug_js = "~/Scripts/ckeditor/plugins/specialchar/lang/ug.js"; 
                                public const string zh_cn_js = "~/Scripts/ckeditor/plugins/specialchar/lang/zh-cn.js"; 
                            }
                        }
                        public static class Assets
                        {
                        }
                    }
                    public static partial class styles 
                    {
                        public static partial class styles_ 
                        {
                            public static class Assets
                            {
                                public const string default_js = "~/Scripts/ckeditor/plugins/styles/styles/default.js"; 
                            }
                        }
                        public static class Assets
                        {
                        }
                    }
                    public static partial class stylesheetparser 
                    {
                        public static class Assets
                        {
                            public const string plugin_js = "~/Scripts/ckeditor/plugins/stylesheetparser/plugin.js"; 
                        }
                    }
                    public static partial class table 
                    {
                        public static partial class dialogs 
                        {
                            public static class Assets
                            {
                                public const string table_js = "~/Scripts/ckeditor/plugins/table/dialogs/table.js"; 
                            }
                        }
                        public static class Assets
                        {
                        }
                    }
                    public static partial class tableresize 
                    {
                        public static class Assets
                        {
                            public const string plugin_js = "~/Scripts/ckeditor/plugins/tableresize/plugin.js"; 
                        }
                    }
                    public static partial class tabletools 
                    {
                        public static partial class dialogs 
                        {
                            public static class Assets
                            {
                                public const string tableCell_js = "~/Scripts/ckeditor/plugins/tabletools/dialogs/tableCell.js"; 
                            }
                        }
                        public static class Assets
                        {
                        }
                    }
                    public static partial class templates 
                    {
                        public static partial class dialogs 
                        {
                            public static class Assets
                            {
                                public const string templates_js = "~/Scripts/ckeditor/plugins/templates/dialogs/templates.js"; 
                            }
                        }
                        public static partial class templates_ 
                        {
                            public static partial class images 
                            {
                                public static class Assets
                                {
                                }
                            }
                            public static class Assets
                            {
                                public const string default_js = "~/Scripts/ckeditor/plugins/templates/templates/default.js"; 
                            }
                        }
                        public static class Assets
                        {
                        }
                    }
                    public static partial class uicolor 
                    {
                        public static partial class dialogs 
                        {
                            public static class Assets
                            {
                                public const string uicolor_js = "~/Scripts/ckeditor/plugins/uicolor/dialogs/uicolor.js"; 
                            }
                        }
                        public static partial class lang 
                        {
                            public static class Assets
                            {
                                public const string bg_js = "~/Scripts/ckeditor/plugins/uicolor/lang/bg.js"; 
                                public const string cs_js = "~/Scripts/ckeditor/plugins/uicolor/lang/cs.js"; 
                                public const string cy_js = "~/Scripts/ckeditor/plugins/uicolor/lang/cy.js"; 
                                public const string da_js = "~/Scripts/ckeditor/plugins/uicolor/lang/da.js"; 
                                public const string de_js = "~/Scripts/ckeditor/plugins/uicolor/lang/de.js"; 
                                public const string el_js = "~/Scripts/ckeditor/plugins/uicolor/lang/el.js"; 
                                public const string en_js = "~/Scripts/ckeditor/plugins/uicolor/lang/en.js"; 
                                public const string eo_js = "~/Scripts/ckeditor/plugins/uicolor/lang/eo.js"; 
                                public const string et_js = "~/Scripts/ckeditor/plugins/uicolor/lang/et.js"; 
                                public const string fa_js = "~/Scripts/ckeditor/plugins/uicolor/lang/fa.js"; 
                                public const string fi_js = "~/Scripts/ckeditor/plugins/uicolor/lang/fi.js"; 
                                public const string fr_js = "~/Scripts/ckeditor/plugins/uicolor/lang/fr.js"; 
                                public const string he_js = "~/Scripts/ckeditor/plugins/uicolor/lang/he.js"; 
                                public const string hr_js = "~/Scripts/ckeditor/plugins/uicolor/lang/hr.js"; 
                                public const string it_js = "~/Scripts/ckeditor/plugins/uicolor/lang/it.js"; 
                                public const string ku_js = "~/Scripts/ckeditor/plugins/uicolor/lang/ku.js"; 
                                public const string mk_js = "~/Scripts/ckeditor/plugins/uicolor/lang/mk.js"; 
                                public const string nb_js = "~/Scripts/ckeditor/plugins/uicolor/lang/nb.js"; 
                                public const string nl_js = "~/Scripts/ckeditor/plugins/uicolor/lang/nl.js"; 
                                public const string no_js = "~/Scripts/ckeditor/plugins/uicolor/lang/no.js"; 
                                public const string pl_js = "~/Scripts/ckeditor/plugins/uicolor/lang/pl.js"; 
                                public const string pt_br_js = "~/Scripts/ckeditor/plugins/uicolor/lang/pt-br.js"; 
                                public const string sk_js = "~/Scripts/ckeditor/plugins/uicolor/lang/sk.js"; 
                                public const string tr_js = "~/Scripts/ckeditor/plugins/uicolor/lang/tr.js"; 
                                public const string ug_js = "~/Scripts/ckeditor/plugins/uicolor/lang/ug.js"; 
                                public const string uk_js = "~/Scripts/ckeditor/plugins/uicolor/lang/uk.js"; 
                                public const string vi_js = "~/Scripts/ckeditor/plugins/uicolor/lang/vi.js"; 
                                public const string zh_cn_js = "~/Scripts/ckeditor/plugins/uicolor/lang/zh-cn.js"; 
                            }
                        }
                        public static partial class yui 
                        {
                            public static partial class assets_ 
                            {
                                public static class Assets
                                {
                                    public const string yui_css = "~/Scripts/ckeditor/plugins/uicolor/yui/assets/yui.css";
                                }
                            }
                            public static class Assets
                            {
                                public const string yui_js = "~/Scripts/ckeditor/plugins/uicolor/yui/yui.js"; 
                            }
                        }
                        public static class Assets
                        {
                            public const string plugin_js = "~/Scripts/ckeditor/plugins/uicolor/plugin.js"; 
                        }
                    }
                    public static partial class wsc 
                    {
                        public static partial class dialogs 
                        {
                            public static class Assets
                            {
                                public const string wsc_css = "~/Scripts/ckeditor/plugins/wsc/dialogs/wsc.css";
                                public const string wsc_js = "~/Scripts/ckeditor/plugins/wsc/dialogs/wsc.js"; 
                            }
                        }
                        public static class Assets
                        {
                        }
                    }
                    public static partial class xml 
                    {
                        public static class Assets
                        {
                            public const string plugin_js = "~/Scripts/ckeditor/plugins/xml/plugin.js"; 
                        }
                    }
                    public static class Assets
                    {
                    }
                }
                public static partial class skins 
                {
                    public static partial class kama 
                    {
                        public static partial class images 
                        {
                            public static class Assets
                            {
                            }
                        }
                        public static class Assets
                        {
                            public const string dialog_css = "~/Scripts/ckeditor/skins/kama/dialog.css";
                            public const string editor_css = "~/Scripts/ckeditor/skins/kama/editor.css";
                            public const string skin_js = "~/Scripts/ckeditor/skins/kama/skin.js"; 
                            public const string templates_css = "~/Scripts/ckeditor/skins/kama/templates.css";
                        }
                    }
                    public static partial class office2003 
                    {
                        public static partial class images 
                        {
                            public static class Assets
                            {
                            }
                        }
                        public static class Assets
                        {
                            public const string dialog_css = "~/Scripts/ckeditor/skins/office2003/dialog.css";
                            public const string editor_css = "~/Scripts/ckeditor/skins/office2003/editor.css";
                            public const string skin_js = "~/Scripts/ckeditor/skins/office2003/skin.js"; 
                            public const string templates_css = "~/Scripts/ckeditor/skins/office2003/templates.css";
                        }
                    }
                    public static partial class v2 
                    {
                        public static partial class images 
                        {
                            public static class Assets
                            {
                            }
                        }
                        public static class Assets
                        {
                            public const string dialog_css = "~/Scripts/ckeditor/skins/v2/dialog.css";
                            public const string editor_css = "~/Scripts/ckeditor/skins/v2/editor.css";
                            public const string skin_js = "~/Scripts/ckeditor/skins/v2/skin.js"; 
                            public const string templates_css = "~/Scripts/ckeditor/skins/v2/templates.css";
                        }
                    }
                    public static class Assets
                    {
                    }
                }
                public static partial class themes 
                {
                    public static partial class @default 
                    {
                        public static class Assets
                        {
                            public const string theme_js = "~/Scripts/ckeditor/themes/default/theme.js"; 
                        }
                    }
                    public static class Assets
                    {
                    }
                }
                public static class Assets
                {
                    public const string ckeditor_js = "~/Scripts/ckeditor/ckeditor.js"; 
                    public const string config_js = "~/Scripts/ckeditor/config.js"; 
                    public const string contents_css = "~/Scripts/ckeditor/contents.css";
                }
            }
            public static partial class MyScripts 
            {
                public static class Assets
                {
                }
            }
            public static partial class noty 
            {
                public static partial class layouts 
                {
                    public static class Assets
                    {
                        public const string bottom_js = "~/Scripts/noty/layouts/bottom.js"; 
                        public const string bottomCenter_js = "~/Scripts/noty/layouts/bottomCenter.js"; 
                        public const string bottomLeft_js = "~/Scripts/noty/layouts/bottomLeft.js"; 
                        public const string bottomRight_js = "~/Scripts/noty/layouts/bottomRight.js"; 
                        public const string center_js = "~/Scripts/noty/layouts/center.js"; 
                        public const string centerLeft_js = "~/Scripts/noty/layouts/centerLeft.js"; 
                        public const string centerRight_js = "~/Scripts/noty/layouts/centerRight.js"; 
                        public const string inline_js = "~/Scripts/noty/layouts/inline.js"; 
                        public const string top_js = "~/Scripts/noty/layouts/top.js"; 
                        public const string topCenter_js = "~/Scripts/noty/layouts/topCenter.js"; 
                        public const string topLeft_js = "~/Scripts/noty/layouts/topLeft.js"; 
                        public const string topRight_js = "~/Scripts/noty/layouts/topRight.js"; 
                    }
                }
                public static partial class packaged 
                {
                    public static class Assets
                    {
                        public const string jquery_noty_packaged_js = "~/Scripts/noty/packaged/jquery.noty.packaged.js"; 
                        public const string jquery_noty_packaged_min_js = "~/Scripts/noty/packaged/jquery.noty.packaged.min.js"; 
                    }
                }
                public static partial class themes 
                {
                    public static class Assets
                    {
                        public const string bootstrap_js = "~/Scripts/noty/themes/bootstrap.js"; 
                        public const string default_js = "~/Scripts/noty/themes/default.js"; 
                        public const string relax_js = "~/Scripts/noty/themes/relax.js"; 
                    }
                }
                public static class Assets
                {
                    public const string jquery_noty_js = "~/Scripts/noty/jquery.noty.js"; 
                }
            }
            public static partial class plugins 
            {
                public static partial class dataTables 
                {
                    public static class Assets
                    {
                        public const string dataTables_bootstrap_js = "~/Scripts/plugins/dataTables/dataTables.bootstrap.js"; 
                        public const string jquery_dataTables_js = "~/Scripts/plugins/dataTables/jquery.dataTables.js"; 
                    }
                }
                public static partial class flot 
                {
                    public static class Assets
                    {
                        public const string excanvas_min_js = "~/Scripts/plugins/flot/excanvas.min.js"; 
                        public const string flot_data_js = "~/Scripts/plugins/flot/flot-data.js"; 
                        public const string jquery_flot_js = "~/Scripts/plugins/flot/jquery.flot.js"; 
                        public const string jquery_flot_pie_js = "~/Scripts/plugins/flot/jquery.flot.pie.js"; 
                        public const string jquery_flot_resize_js = "~/Scripts/plugins/flot/jquery.flot.resize.js"; 
                        public const string jquery_flot_tooltip_min_js = "~/Scripts/plugins/flot/jquery.flot.tooltip.min.js"; 
                    }
                }
                public static partial class metisMenu 
                {
                    public static class Assets
                    {
                        public const string metisMenu_js = "~/Scripts/plugins/metisMenu/metisMenu.js"; 
                        public const string metisMenu_min_js = "~/Scripts/plugins/metisMenu/metisMenu.min.js"; 
                    }
                }
                public static partial class morris 
                {
                    public static class Assets
                    {
                        public const string morris_data_js = "~/Scripts/plugins/morris/morris-data.js"; 
                        public const string morris_js = "~/Scripts/plugins/morris/morris.js"; 
                        public const string morris_min_js = "~/Scripts/plugins/morris/morris.min.js"; 
                        public const string raphael_min_js = "~/Scripts/plugins/morris/raphael.min.js"; 
                    }
                }
                public static class Assets
                {
                }
            }
            public static class Assets
            {
                public const string _references_js = "~/Scripts/_references.js"; 
                public const string bootbox_js = "~/Scripts/bootbox.js"; 
                public const string bootbox_min_js = "~/Scripts/bootbox.min.js"; 
                public const string bootstrap_select_min_js = "~/Scripts/bootstrap-select.min.js"; 
                public const string bootstrap_js = "~/Scripts/bootstrap.js"; 
                public const string bootstrap_min_js = "~/Scripts/bootstrap.min.js"; 
                public const string cloud_zoom_js = "~/Scripts/cloud-zoom.js"; 
                public const string fileinput_min_js = "~/Scripts/fileinput.min.js"; 
                public const string jquery_1_10_2_intellisense_js = "~/Scripts/jquery-1.10.2.intellisense.js"; 
                public const string jquery_1_10_2_js = "~/Scripts/jquery-1.10.2.js"; 
                public const string jquery_1_10_2_min_js = "~/Scripts/jquery-1.10.2.min.js"; 
                public const string jquery_2_2_4_intellisense_js = "~/Scripts/jquery-2.2.4.intellisense.js"; 
                public const string jquery_2_2_4_js = "~/Scripts/jquery-2.2.4.js"; 
                public const string jquery_2_2_4_min_js = "~/Scripts/jquery-2.2.4.min.js"; 
                public const string jquery_MVC_RemoveRow_js = "~/Scripts/jquery-MVC-RemoveRow.js"; 
                public const string jquery_autocomplete_js = "~/Scripts/jquery.autocomplete.js"; 
                public const string jquery_autocomplete_min_js = "~/Scripts/jquery.autocomplete.min.js"; 
                public const string jquery_cookie_js = "~/Scripts/jquery.cookie.js"; 
                public const string jquery_lazyload_js = "~/Scripts/jquery.lazyload.js"; 
                public const string jquery_lazyload_min_js = "~/Scripts/jquery.lazyload.min.js"; 
                public const string jquery_sliderPro_min_js = "~/Scripts/jquery.sliderPro.min.js"; 
                public const string jquery_unobtrusive_ajax_js = "~/Scripts/jquery.unobtrusive-ajax.js"; 
                public const string jquery_unobtrusive_ajax_min_js = "~/Scripts/jquery.unobtrusive-ajax.min.js"; 
                public const string jquery_validate_js = "~/Scripts/jquery.validate.js"; 
                public const string jquery_validate_min_js = "~/Scripts/jquery.validate.min.js"; 
                public const string jquery_validate_unobtrusive_js = "~/Scripts/jquery.validate.unobtrusive.js"; 
                public const string jquery_validate_unobtrusive_min_js = "~/Scripts/jquery.validate.unobtrusive.min.js"; 
                public const string json2_js = "~/Scripts/json2.js"; 
                public const string json2_min_js = "~/Scripts/json2.min.js"; 
                public const string lazysizes_js = "~/Scripts/lazysizes.js"; 
                public const string lazysizes_min_js = "~/Scripts/lazysizes.min.js"; 
                public const string modernizr_2_6_2_js = "~/Scripts/modernizr-2.6.2.js"; 
                public const string modernizr_2_8_3_js = "~/Scripts/modernizr-2.8.3.js"; 
                public const string respond_js = "~/Scripts/respond.js"; 
                public const string respond_matchmedia_addListener_js = "~/Scripts/respond.matchmedia.addListener.js"; 
                public const string respond_matchmedia_addListener_min_js = "~/Scripts/respond.matchmedia.addListener.min.js"; 
                public const string respond_min_js = "~/Scripts/respond.min.js"; 
                public const string star_rating_js = "~/Scripts/star-rating.js"; 
                public const string star_rating_min_js = "~/Scripts/star-rating.min.js"; 
                public const string starRating_plugin_js = "~/Scripts/starRating-plugin.js"; 
                public const string sweet_alert_js = "~/Scripts/sweet-alert.js"; 
                public const string sweet_alert_min_js = "~/Scripts/sweet-alert.min.js"; 
                public const string turbolinks_js = "~/Scripts/turbolinks.js"; 
                public const string turbolinks_min_js = "~/Scripts/turbolinks.min.js"; 
            }
        }
        public static partial class Content 
        {
            public static partial class avatar 
            {
                public static class Assets
                {
                }
            }
            public static partial class plugins 
            {
                public static partial class metisMenu 
                {
                    public static class Assets
                    {
                        public const string metisMenu_css = "~/Content/plugins/metisMenu/metisMenu.css";
                        public const string metisMenu_min_css = "~/Content/plugins/metisMenu/metisMenu.min.css";
                    }
                }
                public static class Assets
                {
                    public const string dataTables_bootstrap_css = "~/Content/plugins/dataTables.bootstrap.css";
                    public const string morris_css = "~/Content/plugins/morris.css";
                    public const string social_buttons_css = "~/Content/plugins/social-buttons.css";
                    public const string timeline_css = "~/Content/plugins/timeline.css";
                }
            }
            public static class Assets
            {
                public const string animate_css = "~/Content/animate.css";
                public const string animate_min_css = "~/Content/animate.min.css";
                public const string bootstrap_select_min_css = "~/Content/bootstrap-select.min.css";
                public const string bootstrap_theme_css = "~/Content/bootstrap-theme.css";
                public const string bootstrap_theme_min_css = "~/Content/bootstrap-theme.min.css";
                public const string bootstrap_css = "~/Content/bootstrap.css";
                public const string bootstrap_min_css = "~/Content/bootstrap.min.css";
                public const string cloud_zoom_css = "~/Content/cloud-zoom.css";
                public const string fileinput_min_css = "~/Content/fileinput.min.css";
                public const string font_awesome_css = "~/Content/font-awesome.css";
                public const string font_awesome_min_css = "~/Content/font-awesome.min.css";
                public const string jquery_autocomplete_css = "~/Content/jquery.autocomplete.css";
                public const string master_css = "~/Content/master.css";
                public const string mycss_css = "~/Content/mycss.css";
                public const string PagedList_css = "~/Content/PagedList.css";
                public const string product_style_common_css = "~/Content/product-style-common.css";
                public const string product_style_css = "~/Content/product-style.css";
                public const string product_css = "~/Content/product.css";
                public const string sb_admin_2_css = "~/Content/sb-admin-2.css";
                public const string search_css = "~/Content/search.css";
                public const string Site_css = "~/Content/Site.css";
                public const string slider_pro_min_css = "~/Content/slider-pro.min.css";
                public const string slideshow_css = "~/Content/slideshow.css";
                public const string star_rating_css = "~/Content/star-rating.css";
                public const string star_rating_min_css = "~/Content/star-rating.min.css";
                public const string style_css = "~/Content/style.css";
                public const string sweet_alert_css = "~/Content/sweet-alert.css";
                public const string user_panel_css = "~/Content/user-panel.css";
            }
        }
        public static partial class Views 
        {
            public static partial class Home 
            {
                public static class Assets
                {
                }
            }
            public static partial class Shared 
            {
                public static partial class DisplayTemplates 
                {
                    public static class Assets
                    {
                    }
                }
                public static partial class EditorTemplates 
                {
                    public static class Assets
                    {
                    }
                }
                public static class Assets
                {
                }
            }
            public static class Assets
            {
            }
        }
    }
}

[GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
internal static class T4MVCHelpers {
    // You can change the ProcessVirtualPath method to modify the path that gets returned to the client.
    // e.g. you can prepend a domain, or append a query string:
    //      return "http://localhost" + path + "?foo=bar";
    private static string ProcessVirtualPathDefault(string virtualPath) {
        // The path that comes in starts with ~/ and must first be made absolute
        string path = VirtualPathUtility.ToAbsolute(virtualPath);
        
        // Add your own modifications here before returning the path
        return path;
    }

    // Calling ProcessVirtualPath through delegate to allow it to be replaced for unit testing
    public static Func<string, string> ProcessVirtualPath = ProcessVirtualPathDefault;

    // Calling T4Extension.TimestampString through delegate to allow it to be replaced for unit testing and other purposes
    public static Func<string, string> TimestampString = System.Web.Mvc.T4Extensions.TimestampString;

    // Logic to determine if the app is running in production or dev environment
    public static bool IsProduction() { 
        return (HttpContext.Current != null && !HttpContext.Current.IsDebuggingEnabled); 
    }
}





#endregion T4MVC
#pragma warning restore 1591, 3008, 3009, 0108, 0114


