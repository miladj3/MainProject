@model ViewModel.ViewModel.Admin.Page.AddPageViewModel
@{
    ViewBag.Title = "صفحه جدید";
    Layout = MVC.Admin.Shared.Views._AdminLayout;
}


@using (Html.BeginForm(MVC.Admin.Page.ActionNames.AddPage, MVC.Admin.Page.Name, FormMethod.Post))
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <div class="form-group">
            @Html.LabelFor(model => model.Title, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-5">
                @Html.EditorFor(model => model.Title, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Title, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-5">
                @Html.EditorFor(model => model.Description, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.KeyWords, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-5">
                @Html.EditorFor(model => model.KeyWords, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.KeyWords, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.DisplayOrder, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-5">
                @Html.EditorFor(model => model.DisplayOrder, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.DisplayOrder, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ImagePath, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-5">
                @Html.EditorFor(model => model.ImagePath, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.ImagePath, "", new { @class = "text-danger" })
            </div>
            @Ajax.ActionLink(linkText: " ",
                   actionName: MVC.Admin.Folder.ActionNames.Index,
                   controllerName: MVC.Admin.Folder.Name,
                    routeValues: new { elementId = "ImagePath" },
                    ajaxOptions: new AjaxOptions
                    {
                        HttpMethod = FormMethod.Get.ToString(),
                        InsertionMode = InsertionMode.Replace,
                        OnSuccess = "LightBox.onSuccess",
                        UpdateTargetId = "lightBox"
                    },
                     htmlAttributes: new
                     {
                         @class = "glyphicon glyphicon-picture font-size-30",
                         @rel = "nofollow",
                         @role = "button",
                         @style = "font-size:30px;"
                     })
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.PageShowPlace, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-5">
                @Html.EnumDropDownListFor(model => model.PageShowPlace, new { @class = "form-control maxWidth" })
                @Html.ValidationMessageFor(model => model.PageShowPlace, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.Content, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-8">
                @Html.TextAreaFor(model => model.Content)
                @Html.ValidationMessageFor(model => model.Content, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            <div class="col-md-offset-2 col-md-5">
                <input type="submit" value="ثبت صفحه" class="btn  btn-success" />
            </div>
        </div>
    </div>
}

@section scipts
{
    <script>
        CKEDITOR_BASEPATH = "@Url.Content("~/Scripts/ckeditor/")";
    </script>
    @Scripts.Render(Links.BundleExtension.Scripts.JqueryVal)
    @Scripts.Render(Links.BundleExtension.Scripts.CkeEditoreJS)
        <script>
        CKEDITOR.config.toolbar = Admin.CkeditorToolbar;
        CKEDITOR.replace('Content', { language: "fa" });
        $(document).on('click', '.imageloadedContainers img', function () {
            $('.imageloadedContainers img').removeClass('border');
            $(this).addClass('border');
            $('#ImagePath').val($(this).data('id'));
        })
        </script>
}
